[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js":"20"},{"size":183,"mtime":1608628839843,"results":"21","hashOfConfig":"22"},{"size":1631,"mtime":1608983755008,"results":"23","hashOfConfig":"22"},{"size":18627,"mtime":1608986206789,"results":"24","hashOfConfig":"22"},{"size":16646,"mtime":1608986446246,"results":"25","hashOfConfig":"22"},{"size":3987,"mtime":1608986258216,"results":"26","hashOfConfig":"22"},{"size":2026,"mtime":1608986304908,"results":"27","hashOfConfig":"22"},{"size":29408,"mtime":1608984504947,"results":"28","hashOfConfig":"22"},{"size":636,"mtime":1608968169398,"results":"29","hashOfConfig":"22"},{"size":574,"mtime":1608971716058,"results":"30","hashOfConfig":"22"},{"size":4388,"mtime":1608984705296,"results":"31","hashOfConfig":"22"},{"size":4476,"mtime":1608985893137,"results":"32","hashOfConfig":"22"},{"size":4122,"mtime":1608977639153,"results":"33","hashOfConfig":"22"},{"size":2202,"mtime":1608985960785,"results":"34","hashOfConfig":"22"},{"size":4093,"mtime":1608968169393,"results":"35","hashOfConfig":"22"},{"size":2221,"mtime":1608968169394,"results":"36","hashOfConfig":"22"},{"size":2139,"mtime":1608968169396,"results":"37","hashOfConfig":"22"},{"size":2069,"mtime":1608968169397,"results":"38","hashOfConfig":"22"},{"size":2814,"mtime":1608984270255,"results":"39","hashOfConfig":"22"},{"size":4731,"mtime":1608968169393,"results":"40","hashOfConfig":"22"},{"size":636,"mtime":1608983653986,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1208h51",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js",[],["95","96"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js",["97"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Checkbox,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport GroupHeader from './groupHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    width: '90%',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: {\r\n    padding: '16px 20px',\r\n  },\r\n  inputLabel: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: '8px 0px 24px 0px',\r\n    fontSize: 16,\r\n  },\r\n  editorStyleDes: {\r\n    minHeight: '200px',\r\n    maxHeight: '200px',\r\n  },\r\n  editorStyleChapter: {\r\n    minHeight: '400px',\r\n    maxHeight: '400px',\r\n  },\r\n  toolbarStyle: {\r\n    marginBottom: '0px',\r\n    borderBottom: \"1px solid #C0C0C0\",\r\n  },\r\n  wrapperStyle: {\r\n    border: \"1px solid #C0C0C0\",\r\n  },\r\n\r\n  formCheckBoxGrid: {\r\n    textAlign: 'left',\r\n    width: '100%',\r\n    marginBottom: '5px',\r\n    direction: \"row\",\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n\r\n  },\r\n  formCheckBoxGridItem: {\r\n    marginBottom: '-10px'\r\n  },\r\n  FormHelperText: {\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  imageBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n\r\n  },\r\n  image: {\r\n    height: '168px',\r\n    width: '168px',\r\n    paddingBottom: '10px'\r\n  },\r\n  imageButton: {\r\n    width: '117px',\r\n    height: '36px',\r\n    backgroundColor: '#2196F3',\r\n    marginRight: '10px',\r\n    textTransform: 'none',\r\n  },\r\n  deleteImageButton: {\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    textTransform: 'none',\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  uploadButton: {\r\n    backgroundColor: '#2196F3',\r\n    color: '#FFFFFF',\r\n  }\r\n\r\n\r\n}));\r\n\r\nconst ageGroup = [\r\n  {\r\n    value: 'all',\r\n    label: 'Mọi lứa tuổi'\r\n  },\r\n  {\r\n    value: 'teen',\r\n    label: 'Teen'\r\n  },\r\n  {\r\n    value: '18',\r\n    label: 'Trên 18 tuổi'\r\n  }\r\n];\r\n\r\nconst language = [\r\n  {\r\n    value: 'vietnam',\r\n    label: 'Tiếng Việt'\r\n  },\r\n  {\r\n    value: 'english',\r\n    label: 'Tiếng Anh'\r\n  },\r\n  {\r\n    value: 'another',\r\n    label: 'Ngôn ngữ khác'\r\n  }\r\n];\r\n\r\nconst genre = [\r\n  {\r\n    value: 'action',\r\n    label: 'Hành động'\r\n  },\r\n  {\r\n    value: 'comedy',\r\n    label: 'Hài hước'\r\n  },\r\n  {\r\n    value: 'horror',\r\n    label: 'Kinh dị'\r\n  },\r\n  {\r\n    value: 'stragedy',\r\n    label: 'Bi kịch'\r\n  },\r\n  {\r\n    value: 'romance',\r\n    label: 'Tình cảm'\r\n  },\r\n  {\r\n    value: 'history',\r\n    label: 'Lịch sử'\r\n  },\r\n];\r\n\r\nconst tags = [\r\n  {\r\n    value: 'Male lead',\r\n    label: 'Nam chinh'\r\n  },\r\n  {\r\n    value: 'Female lead',\r\n    label: 'Nữ chính'\r\n  },\r\n\r\n\r\n];\r\n\r\nfunction Uploading() {\r\n  const histoty = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    genre: {},\r\n    tags: {},\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  const [preview, setPreview] = useState()\r\n\r\n  // intial data\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    var temp = {};\r\n    for (var i = 0; i < genre.length; i++) {\r\n      temp[genre[i].value] = false;\r\n    }\r\n    var temp2 = {};\r\n    for (var j = 0; j < tags.length; j++) {\r\n      temp2[tags[j].value] = false;\r\n    }\r\n\r\n    setValues({\r\n      ...values,\r\n      genre: temp,\r\n      tags: temp2\r\n    });\r\n  }, [])\r\n\r\n  // upload image \r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile)\r\n    setPreview(objectUrl)\r\n\r\n    // free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl)\r\n  }, [selectedFile])\r\n\r\n  const onSelectFile = e => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined)\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n    e.target.value = '';\r\n  }\r\n\r\n  const onDeleteImage = (e) => {\r\n    setSelectedFile(undefined)\r\n    return;\r\n  }\r\n\r\n  // handle change of form\r\n  const handleChange = (event) => {                     // change textfield\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const handleChangeEditorDes = (editorState) => {      // change long des editor \r\n    setValues({\r\n      ...values,\r\n      longDes: editorState\r\n    });\r\n  };\r\n  const handleChangeEditorData = (editorState) => {   // change data editor \r\n    setValues({\r\n      ...values,\r\n      data: editorState\r\n    });\r\n  };\r\n  const handleChangeGenre = (event) => {             // change genre checkbox \r\n    setValues({\r\n      ...values,\r\n      genre: { ...values.genre, [event.target.name]: event.target.checked }\r\n    });\r\n  }\r\n  const handleChangeTags = (event) => {            // change tags checkbox \r\n    setValues({\r\n      ...values,\r\n      tags: { ...values.tags, [event.target.name]: event.target.checked }\r\n    });\r\n\r\n  }\r\n\r\n  // validate for form\r\n  const handleValidate = (event) => {                 // validate textfield\r\n    if ((event.target.name === 'title' || event.target.name === 'titleChapter') && event.target.value === '') {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"\"\r\n      });\r\n    }\r\n  }\r\n  const handleValidateEditorDes = (e, editorState) => {   // validate editor\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleValidateEditorData = (e, editorState) => {\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  var genreList = Object.entries(values.genre);                     // validate genre checkbox\r\n  const errorGenre = genreList.filter((v) => v[1] === true).length > 4;\r\n\r\n\r\n  // submit form\r\n  const onSubmit = (event) => {\r\n    var tempErrors = {...errors};;\r\n    if (values.title === '') {\r\n      tempErrors.title = \"* Không được để trống\";\r\n    }\r\n    if (values.titleChapter === '') {\r\n      tempErrors.titleChapter = \"* Không được để trống\";\r\n    }\r\n    if (values.longDes === '' || !values.longDes.getCurrentContent().hasText()) {\r\n      tempErrors.longDes = \"* Không được để trống\";\r\n    }\r\n    if (values.data === '' ||  !values.data.getCurrentContent().hasText()) {\r\n      tempErrors.data = \"* Không được để trống\";\r\n    }\r\n    setErrors(tempErrors);\r\n    \r\n    var errorList = Object.entries(tempErrors);\r\n    const hasError = errorList.filter((v) => v[1] !== '').length > 0;\r\n    if (hasError || errorGenre) {\r\n      console.log(tempErrors)\r\n    }\r\n    else {\r\n      histoty.push(\"/Detail\");\r\n      console.log(values)\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"lg\">\r\n      <form autoComplete=\"off\" noValidate>\r\n        <Card>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đăng truyện mới\" />\r\n\r\n          <GroupHeader title=\"Thông tin cơ bản\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.title !== '' ? true : false}\r\n                  helperText={errors.title !== '' ? errors.title : ''}\r\n                  fullWidth\r\n                  name=\"title\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả ngắn</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={false}\r\n                  helperText={false ? \"daw\" : \"\"}\r\n                  fullWidth\r\n                  name=\"shortDes\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả dài</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleDes}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorDes}\r\n                  onBlur={handleValidateEditorDes}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.longDes !== '' ? errors.longDes : ''}\r\n                </FormHelperText>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Thông tin chi tiết\" />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Độ tuổi </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"age\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {ageGroup.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ngôn ngữ</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {language.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Thể loại</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {genre.map(genre => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeGenre} name={genre.value} />}\r\n                        label={genre.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText} error={errorGenre}> * Tối đa 4 thể loại </FormHelperText>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tags</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {tags.map(tags => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeTags} name={tags.value} />}\r\n                        label={tags.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText}> </FormHelperText>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Ảnh\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ảnh bìa truyện </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <div className={classes.imageBox}>\r\n                  <img className={classes.image} src={preview} alt='' />\r\n                  <Box>\r\n                    <Button className={classes.imageButton} color=\"primary\" variant=\"contained\" component=\"label\">\r\n                      Đăng ảnh\r\n                    <input type='file' hidden onChange={onSelectFile} />\r\n                    </Button>\r\n                    <Button className={classes.deleteImageButton} color=\"primary\" size=\"small\" onClick={onDeleteImage}>\r\n                      Xóa\r\n                    </Button>\r\n                  </Box>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Chương truyện đầu tiên\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề chương </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.titleChapter !== '' ? true : false}\r\n                  helperText={errors.titleChapter !== '' ? errors.titleChapter : ''}\r\n                  fullWidth\r\n                  name=\"titleChapter\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Nội dung</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleChapter}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorData}\r\n                  onBlur={handleValidateEditorData}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.data !== '' ? errors.data : ''}\r\n                </FormHelperText>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" p={2} >\r\n            <Button className={classes.uploadButton} color='primary' variant=\"contained\" onClick={onSubmit}>\r\n              Đăng truyện\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Uploading;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js",["98","99"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './globalStyles';\r\nimport { lightTheme, darkTheme } from '../../constants/config.json';\r\n\r\nimport ReadingPanel from './ReadingPanel';\r\nimport InfoPanel from './InfoPanel';\r\nimport Toolbar from './Toolbar';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    width: '90%',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: '24px',\r\n    paddingTop: '24px',\r\n  }),\r\n  card: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    border: theme.fieldBorder,\r\n  }),\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    padding: '5px 0px',\r\n    backgroundColor: theme.body,\r\n  }),\r\n  divider: (theme) => ({\r\n    border: theme.fieldBorder\r\n  })\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    number: 1,\r\n    title: 'Tiêu đề chương 1',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 2,\r\n    title: 'Tiêu đề chương 2',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 3,\r\n    title: 'Tiêu đề chương 3',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 4,\r\n    title: 'Tiêu đề chương 4 ',\r\n    selected: true,\r\n  },\r\n  {\r\n    number: 5,\r\n    title: 'Tiêu đề chương 5',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 6,\r\n    title: 'Tiêu đề chương 6',\r\n    selected: false,\r\n  },\r\n\r\n]\r\n\r\nconst Reading = () => {\r\n  const [chapterList, setChapterList] = useState(data);\r\n  const [font, setFont] = useState(\"Arial\");\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [indent, setIndent] = useState('90%');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const classes = useStyles(isDarkMode ? darkTheme : lightTheme);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n\r\n  const selected = chapterList.filter((chapter) => chapter.selected === true);\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n        <GlobalStyles />\r\n      </ThemeProvider>\r\n\r\n      <Container className={classes.root} maxWidth=\"lg\">\r\n        <Card className={classes.card}>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đọc truyện\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <InfoPanel theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n            <Toolbar\r\n              font={font} setFont={(i) => setFont(i)}\r\n              fontSize={fontSize} setFontSize={(i) => setFontSize(i)}\r\n              indent={indent} setIndent={(i) => setIndent(i)}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n              isDarkMode={isDarkMode}\r\n              setIsDarkMode={setIsDarkMode}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n            <ReadingPanel\r\n              selected={selected[0]}\r\n              font={font}\r\n              fontSize={fontSize}\r\n              indent={indent}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Reading;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js",["100","101"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Button\r\n} from '@material-ui/core';\r\nimport AnalystCard from \"./AnalystCard\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport ManagementCard from \"./ManagementCard\";\r\nimport SettingCard from \"./SettingCard\";\r\nimport Infor from \"./Infor\";\r\nfunction Profile() {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Grid>\r\n                <Infor />\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={3}\r\n            >\r\n                <Grid\r\n                    item\r\n                    lg={3}\r\n                    sm={6}\r\n                    xl={3}\r\n                    xs={12}\r\n                >\r\n                    <Button size=\"large\">\r\n                        <FavoriteCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    lg={3}\r\n                    sm={6}\r\n                    xl={3}\r\n                    xs={12}\r\n                >\r\n                    <Button size=\"large\">\r\n                        <AnalystCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    lg={3}\r\n                    sm={6}\r\n                    xl={3}\r\n                    xs={12}\r\n                >\r\n                    <Button size=\"large\">\r\n                        <ManagementCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    lg={3}\r\n                    sm={6}\r\n                    xl={3}\r\n                    xs={12}\r\n                >\r\n                    <Button size=\"large\">\r\n                        <SettingCard />\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js",["102","103","104","105","106"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    // height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardContent: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    flexGrow: 0,\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n    marginBottom: '-20px'\r\n  },\r\n  fab: {\r\n    width: '35%',\r\n    height: '35%',\r\n    fontSize: '50px',\r\n  },\r\n  tagContent: {\r\n    marginBottom: '10px',\r\n    textAlign: 'left',\r\n    display: 'block',\r\n    width: '100%',\r\n    padding: '10px',\r\n    backgroundColor: '#C4C4C4'\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    textAlign: 'right',\r\n    width: '70%',\r\n    marginRight: '5px'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '25%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    left: 5,\r\n    top: 5,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const category = [\r\n    {\r\n      id: 1,\r\n      name: \"Bí ẩn\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Bi kịch\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Cung đấu\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Giật gân\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Hài hước\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Kiếm hiệp\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Lịch sử\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Ngôn tình\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Thám hiểm\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Siêu nhiên\",\r\n    }\r\n  ];\r\n  const novels = [\r\n    {\r\n      id: 1,\r\n      name: \"Đêm hào nhoáng\",\r\n      catId: 1,\r\n      updatedAt: 2, // đại diện cho ngày được sắp xếp, số càng lớn thì ngày càng gần\r\n      rating: 3,\r\n    }, {\r\n      id: 2,\r\n      name: \"Quan tài cho Dimitrios\",\r\n      catId: 1,\r\n      updatedAt: 1,\r\n      rating: 1,\r\n    }, {\r\n      id: 3,\r\n      name: \"Giấc ngủ lớn\",\r\n      catId: 1,\r\n      updatedAt: 5,\r\n      rating: 4,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Bí ẩn mãi là bí ẩn 1\",\r\n      catId: 1,\r\n      updatedAt: 5,\r\n      rating: 3,\r\n    }\r\n    ,\r\n    {\r\n      id: 5,\r\n      name: \"Bí ẩn mãi là bí ẩn 2\",\r\n      catId: 1,\r\n      updatedAt: 4,\r\n      rating: 3,\r\n    }\r\n    , {\r\n      id: 6,\r\n      name: \"Bí ẩn mãi là bí ẩn 3\",\r\n      catId: 1,\r\n      updatedAt: 3,\r\n      rating: 2,\r\n    }\r\n    ,\r\n    {\r\n      id: 7,\r\n      name: \"Bí ẩn mãi là bí ẩn 4\",\r\n      catId: 1,\r\n      updatedAt: 7,\r\n      rating: 3.5,\r\n    }\r\n    ,\r\n    {\r\n      id: 8,\r\n      name: \"Bí ẩn mãi là bí ẩn 5\",\r\n      catId: 1,\r\n      updatedAt: 1,\r\n      rating: 3.5,\r\n    }\r\n    ,\r\n    {\r\n      id: 9,\r\n      name: \"Bí ẩn làng ma sói\",\r\n      catId: 1,\r\n      updatedAt: 6,\r\n      rating: 3.5,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Quân hậu đen\",\r\n      catId: 1,\r\n      updatedAt: 9,\r\n      rating: 3.5,\r\n    }\r\n    ,\r\n    {\r\n      id: 11,\r\n      name: \"Ngôi làng bí ẩn\",\r\n      catId: 1,\r\n      updatedAt: 10,\r\n      rating: 3.5,\r\n    }\r\n    ,\r\n    {\r\n      id: 12,\r\n      name: \"Con tàu huyển bí\",\r\n      catId: 1,\r\n      updatedAt: 7,\r\n      rating: 3.5,\r\n    },\r\n    {\r\n      id: 13,\r\n      name: \"Như Ý truyện\",\r\n      catId: 3,\r\n      updatedAt: 2,\r\n      rating: 4.0,\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Chân Hoàn truyện\",\r\n      catId: 3,\r\n      updatedAt: 1,\r\n      rating: 4.0,\r\n    },\r\n    {\r\n      id: 15,\r\n      name: \"Hạnh phúc của một tang gia\",\r\n      catId: 2,\r\n      updatedAt: 1,\r\n      rating: 3.0,\r\n    }\r\n\r\n  ];\r\n  const topMonth = [\r\n    {\r\n      id: 1,\r\n      name: \"Pháp sư vô tâm\",\r\n      date: \"21/01/2021\",\r\n      author: \"Đỗ Thị Mai Chờ\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://macthienyblog.files.wordpress.com/2015/08/phap-su-vo-tam3-macthienyblog.jpg?w=656\",\r\n    }, {\r\n      id: 2,\r\n      name: \"Bến thượng hải\",\r\n      date: \"05/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://i.pinimg.com/originals/0d/47/0e/0d470e179522f6d53c0a3cedfbc8eac9.png\"\r\n    }, {\r\n      id: 3,\r\n      name: \"Chân Hoàn truyện\",\r\n      date: \"15/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.5,\r\n      img: \"https://sstruyen.com/assets/img/story/hau-cung-chan-hoan-truyen.jpg\"\r\n    }, {\r\n      id: 4,\r\n      name: \"Cung\",\r\n      date: \"09/01/2021\",\r\n      author: \"Vu Chính\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://wikidich.com/photo/5ad973a4ef21ec7264c0fb91?o=1\"\r\n    }, {\r\n      id: 5,\r\n      name: \"Như Ý truyện\",\r\n      date: \"14/01/2021\",\r\n      author: \"Trịnh Hiểu Long\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://img.webtruyen.com/public/images/reviews_img/20191230/review-nhu-y-truyen-3.jpg\"\r\n    }\r\n  ];\r\n  const topWeek = [\r\n    {\r\n      id: 3,\r\n      name: \"Chân Hoàn truyện\",\r\n      date: \"15/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.5,\r\n      img: \"https://sstruyen.com/assets/img/story/hau-cung-chan-hoan-truyen.jpg\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Bến thượng hải\",\r\n      date: \"10/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://i.pinimg.com/originals/0d/47/0e/0d470e179522f6d53c0a3cedfbc8eac9.png\"\r\n    }, {\r\n      id: 5,\r\n      name: \"Như Ý truyện\",\r\n      date: \"14/01/2021\",\r\n      author: \"Trịnh Hiểu Long\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://img.webtruyen.com/public/images/reviews_img/20191230/review-nhu-y-truyen-3.jpg\"\r\n    }, {\r\n      id: 4,\r\n      name: \"Cung\",\r\n      date: \"16/01/2021\",\r\n      author: \"Vu Chính\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://wikidich.com/photo/5ad973a4ef21ec7264c0fb91?o=1\"\r\n    }, {\r\n      id: 1,\r\n      name: \"Pháp sư vô tâm\",\r\n      date: \"13/01/2021\",\r\n      author: \"Đỗ Thị Mai Chờ\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://macthienyblog.files.wordpress.com/2015/08/phap-su-vo-tam3-macthienyblog.jpg?w=656\",\r\n    }\r\n  ];\r\n  const allTime = [\r\n    {\r\n      id: 3,\r\n      name: \"Chân Hoàn truyện\",\r\n      date: \"15/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.5,\r\n      img: \"https://sstruyen.com/assets/img/story/hau-cung-chan-hoan-truyen.jpg\"\r\n    }, {\r\n      id: 5,\r\n      name: \"Như Ý truyện\",\r\n      date: \"14/01/2021\",\r\n      author: \"Trịnh Hiểu Long\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://img.webtruyen.com/public/images/reviews_img/20191230/review-nhu-y-truyen-3.jpg\"\r\n    }, {\r\n      id: 4,\r\n      name: \"Cung\",\r\n      date: \"16/01/2021\",\r\n      author: \"Vu Chính\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 4.0,\r\n      img: \"https://wikidich.com/photo/5ad973a4ef21ec7264c0fb91?o=1\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Bến thượng hải\",\r\n      date: \"10/01/2021\",\r\n      author: \"Lưu Liệm Tử\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://i.pinimg.com/originals/0d/47/0e/0d470e179522f6d53c0a3cedfbc8eac9.png\"\r\n    }, {\r\n      id: 1,\r\n      name: \"Pháp sư vô tâm\",\r\n      date: \"13/01/2021\",\r\n      author: \"Đỗ Thị Mai Chờ\",\r\n      desc: \"Truyện kể về một nữ nhân được mệnh danh “Dạ Kiêu”, hắc bạch lưỡng đạo đều kính nể cùng sợ hãi, trang dung hiện đại, kinh diễm ra bốn phía. Xinh đẹp của cô khiến người người nguyện ý đi vào chỗ chết nhưng khí tràng của cô lại khiến người ta lực bất tòng tâm.\",\r\n      rating: 5,\r\n      img: \"https://macthienyblog.files.wordpress.com/2015/08/phap-su-vo-tam3-macthienyblog.jpg?w=656\",\r\n    }\r\n  ];\r\n  const imgURL = [\r\n    \"https://i.pinimg.com/originals/9f/95/47/9f95477167938b1df2c513e1c89fb155.png\",\r\n    \"https://i.pinimg.com/236x/03/40/64/034064001bee35be94c16228884bf57b--wattpad-black-cats.jpg\",\r\n    \"https://vnkings.com/wp-content/uploads/2018/09/C5FA230B-B569-4783-B92B-156AA667D1CC.jpeg\",\r\n    \"https://cf.shopee.vn/file/5595a01670964d0295b156e5f4b5f2c5\",\r\n    \"https://i.pinimg.com/236x/ae/bd/d3/aebdd3b97f77fac4112610f64ff601a1.jpg\",\r\n    \"https://i.pinimg.com/236x/79/e3/f3/79e3f32c79474c41b7588b7247806dbb--wattpad.jpg\",\r\n    \"https://i.imgur.com/qflHGgf.jpg?1\",\r\n    \"https://vnkings.com/wp-content/uploads/2016/05/174759.jpg\",\r\n    \"https://www.dongabooks.vn/uploads/Products/product_947/Truyen_co_tich_VN_Bia_1_Cung_web.jpg\",\r\n    \"https://nhasachmiendong.com/files/products/hom-nay-toi-that-tinh_14.jpg\",\r\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTcZWjFjaJWpqtQ7rB-bFRMI08X_QBAblWf5g&usqp=CAU\"\r\n  ]\r\n\r\n  const [chosenCategory, setChosenCategory] = React.useState(1);\r\n  const [sortStrategy, setSortStrategy] = React.useState(0);\r\n  const [topStrategy, setTopStrategy] = React.useState(0);\r\n  const [novelByCat, setNovelByCat] = React.useState(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt));\r\n  const [displayedNovels, setDisplayNovels] = React.useState([]);\r\n  const [displayedTop, setDisplayedTop] = React.useState(topMonth);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleChangeCategory = (id) => {\r\n    setChosenCategory(id);\r\n    setPage(1);\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (sortStrategy === 0)\r\n      setNovelByCat(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt))\r\n    else\r\n      setNovelByCat(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.rating - novel1.rating));\r\n\r\n  }, [chosenCategory, sortStrategy])\r\n\r\n  React.useEffect(() => {\r\n    if (topStrategy === 0)\r\n      setDisplayedTop(topMonth);\r\n    else if (topStrategy === 1) setDisplayedTop(topWeek);\r\n    else setDisplayedTop(allTime);\r\n  }, [topStrategy]);\r\n\r\n  React.useEffect(() => {\r\n\r\n    const start = (page - 1) * 9;\r\n    const end = start + 9 - 1;\r\n    const paginatedNovels = novelByCat.filter((item, index) => index >= start && index <= end);\r\n    setDisplayNovels(paginatedNovels);\r\n\r\n  }, [page, novelByCat])\r\n  // main unit\r\n  return (\r\n    <>\r\n      <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={2} md={2}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title={<b>THỂ LOẠI</b>} style={{ color: \"#FF781F\" }} className={classes.cardHeader} />\r\n              <CardContent className={classes.cardContent}>\r\n                {\r\n                  category.map((item) => (\r\n                    (\r\n                      chosenCategory === item.id ?\r\n                        <Button key={item.id} style={{ textAlign: \"left\", width: \"100%\", marginBottom: \"10px\", borderRadius: '0', backgroundImage: 'linear-gradient(to right, #c1c1c1 0%, #c1c1c1 95%, #FF781F 95%, #FF781F 100%)' }} >\r\n                          <span style={{ width: \"86%\", fontWeight: \"bold\" }}>\r\n                            {item.name}\r\n                          </span>\r\n                          <span style={{ width: \"14%\" }}>\r\n                            <DoubleArrowIcon />\r\n                          </span>\r\n                        </Button>\r\n                        :\r\n                        <Button className={classes.tagContent} key={item.id} style={{ borderRadius: '0', backgroundColor: '#E1E1E1' }}\r\n                          onClick={() => handleChangeCategory(item.id)}\r\n                        >\r\n                          <b>{item.name}</b>\r\n                        </Button>\r\n                    )\r\n                  ))\r\n                }\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div style={{ marginBottom: '15px' }}>\r\n              <SimpleFilter sortStrategy={sortStrategy} setSortStrategy={setSortStrategy} />\r\n            </div>\r\n            <div>\r\n              <Grid container spacing={4}>\r\n                {\r\n                  novelByCat.length === 0 ?\r\n                    <Typography>Chưa có mẫu truyện thuộc thể loại này. Xin hãy quay lại sau.</Typography>\r\n                    // mới nhất\r\n                    :\r\n                    (\r\n                      sortStrategy === 0 ?\r\n                        displayedNovels.map((novel, index) => (\r\n                          <Grid item xs={12} sm={4} md={4} key={index}>\r\n                            <img src={imgURL[Math.floor(Math.random() * Math.floor(imgURL.length))]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n                            <div >\r\n                              <Typography title={novel.name} style={{\r\n                                width: \"100%\", display: 'inline-block',\r\n                                whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                              }}>\r\n                                <a href=\"/path\" style={{ color: 'black' }}>{novel.name}</a>\r\n                              </Typography>\r\n                            </div>\r\n                          </Grid>\r\n                        ))\r\n                        :\r\n                        //nổi bật nhất\r\n                        displayedNovels.map((novel, index) => (\r\n                          <Grid item xs={12} sm={4} md={4} key={index}>\r\n                            <img src={imgURL[Math.floor(Math.random() * Math.floor(imgURL.length))]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n                            <div >\r\n                              <Typography style={{\r\n                                width: \"100%\", display: 'inline-block',\r\n                                whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                              }}><a href=\"/path\" style={{ color: 'black' }}>{novel.name}</a></Typography>\r\n                            </div>\r\n                          </Grid>\r\n                        ))\r\n                    )\r\n                }\r\n              </Grid>\r\n            </div>\r\n            {\r\n              novelByCat.length !== 0 ?\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <PaginationRounded\r\n                    count={Math.ceil(novelByCat.length / 9)}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    page={page}\r\n                    setPage={setPage} />\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <TopFilter topStrategy={topStrategy} setTopStrategy={setTopStrategy} />\r\n            <div style={{ backgroundColor: '#E1E1E1', paddingTop: \"8px\" }}>\r\n              {\r\n                displayedTop.map((novel, index) => (\r\n                  <div key={index} style={{ backgroundColor: \"#c4c4c4\", borderRadius: \"8px\", marginTop: '5px', marginBottom: '5px', padding: \"10px\" }}>\r\n                    <div className={classes.container} >\r\n                      <div className={classes.floatLeft}>\r\n                        <StyledBadge badgeContent={index <= 2 ? index + 1 : null} color={index === 0 ? \"secondary\" : index === 1 ? \"error\" : \"primary\"}\r\n                          anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                          }}\r\n                          style={{ marginTop: \"10px\" }}\r\n                        >\r\n                          <img src={novel.img} alt={\"Novel avatar\"} width=\"100%\" height=\"130px\" style={{ borderRadius: \"8px\" }} />\r\n                        </StyledBadge>\r\n                      </div>\r\n                      <div className={classes.floatRight}>\r\n                        <Typography style={{ fontSize: \"25px\", fontWeight: \"bold\", textAlign: \"center\" }}>{novel.name}</Typography>\r\n                        <div title={novel.desc} style={{\r\n                          textAlign: \"justify\",\r\n                          overflow: \"hidden\",\r\n                          maxHeight: \"5.4em\",\r\n                          lineHeight: \"1.8em\",\r\n                          position: \"relative\",\r\n                          maxWidth: \"100%\",\r\n\r\n                          // \"&&:before\": {   unwork\r\n                          //   content: '\"...\"',\r\n                          //   position: \"absolute\",\r\n                          //   right: 0,\r\n                          //   bottom: 0\r\n                          // },\r\n                          // \"&&:after\": {\r\n                          //   content: '\"\"',\r\n                          //   position: \"absolute\",\r\n                          //   right: 0,\r\n                          //   width: \"1em\",\r\n                          //   height: \"1em\",\r\n                          //   marginTop: \"0.2em\",\r\n                          //   background: \"white\"\r\n                          // }\r\n                        }}>\r\n                          {novel.desc}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ textAlign: \"left\" }}>\r\n                      {\r\n                        [1, 2, 3, 4, 5].map((item, index) => (\r\n                          item <= novel.rating ?\r\n                            <StarIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                            :\r\n                            <StarBorderIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                      <span>\r\n                        Tác giả: {novel.author}\r\n                      </span>\r\n                      <span>\r\n                        Ngày đăng: {novel.date}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container >\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles_1 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  'Mới nhất',\r\n  'Nổi bật',\r\n];\r\n\r\nfunction SimpleFilter({ sortStrategy, setSortStrategy }) {\r\n  const classes = useStyles_1();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSortStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#c1c1c1\", width: \"20%\", borderRadius: \"8px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'white' }}\r\n        >\r\n          <ListItemText primary={options[sortStrategy]} />\r\n          < ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === sortStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles_2 = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#0057B2',\r\n      color: 'white',\r\n    },\r\n    // \"& .MuiPaginationItem\": {\r\n    //   backgroundColor: \"yellow\"\r\n    // },\r\n    // '& .page-item': {\r\n    //   backgroundColor: '#E0E0E0'\r\n    // }\r\n  },\r\n}));\r\n\r\nfunction PaginationRounded({ count, page, setPage }) {\r\n  const classes = useStyles_2();\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={count} page={page} shape=\"rounded\" color=\"primary\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst topOptions = [\r\n  \"TOP Tháng\",\r\n  \"TOP Năm\",\r\n  \"Mọi thời đại\"\r\n];\r\n\r\nconst useStyles_3 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n}));\r\n\r\nfunction TopFilter({ topStrategy, setTopStrategy }) {\r\n  const classes = useStyles_3();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setTopStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#FF781F\", borderRadius: \"0px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'white' }}\r\n        >\r\n          <ListItemText style={{ textAlign: 'center' }} primary={topOptions[topStrategy]} />\r\n          <ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {topOptions.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === topStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div >\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js",["107","108","109"],"import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Switch,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.body\r\n  }),\r\n  toolbar: (theme) => ({\r\n    width: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '14px',\r\n    fontSize: '20px',\r\n    color: theme.text\r\n  }),\r\n  marginIcon: {\r\n    marginRight: '5px'\r\n  },\r\n  marginGroup: {\r\n    marginRight: '24px'\r\n  },\r\n  fontIcon: {\r\n    width: '33px',\r\n    height: '33px',\r\n    color: '#2F80ED',\r\n  },\r\n  fontDropdown: {\r\n    width: '200px'\r\n  },\r\n  textField: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    \"& .MuiInputBase-root\": {\r\n      color: theme.text,\r\n      border: theme.fieldBorder,\r\n      backgroundColor: theme.fieldBackground,\r\n      \"& option\": {\r\n        backgroundColor: theme.body,\r\n      }\r\n    },\r\n    \"& .MuiSelect-icon\": {\r\n      color: theme.text,\r\n    }\r\n  }),\r\n}));\r\n\r\nconst data1 = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28];\r\nconst data2 = ['Arial', 'Roboto', 'Cambria', 'Georgia', 'Times New Roman'];\r\nconst data3 = ['50%', '60%', '70%', '80%', '90%'];\r\n\r\nconst Toolbar = (props) => {\r\n  const classes = useStyles(props.theme);\r\n  const [listFontSize, setListFontSize] = useState(data1);\r\n  const [listFont, setListFont] = useState(data2);\r\n  const [listIndent, setListIndent] = useState(data3);\r\n\r\n  const handleChangeFont = (e) => {\r\n    props.setFont(e.target.value);\r\n  }\r\n  const handleChangeFontSize = (e) => {\r\n    props.setFontSize(e.target.value);\r\n  }\r\n  const handleChangeIndent = (e) => {\r\n    props.setIndent(e.target.value);\r\n  }\r\n\r\n  const handleChangeTheme = () => {\r\n    if (props.isDarkMode) {\r\n      props.setIsDarkMode(false);\r\n    }\r\n    else {\r\n      props.setIsDarkMode(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.root} maxWidth=\"lg\">\r\n        <Box className={classes.toolbar}>\r\n          <Typography className={classes.marginIcon}>Dark mode</Typography>\r\n          <Switch className={classes.marginGroup} onChange={handleChangeTheme}\r\n            color=\"secondary\" name=\"dark\"\r\n          />\r\n          <FontDownloadIcon className={`${classes.fontIcon} ${classes.marginIcon}`} />\r\n          <TextField className={`${classes.fontDropdown} ${classes.marginGroup} ${classes.textField}`}\r\n            size=\"small\" name=\"font\" required select variant=\"outlined\" value={props.font}\r\n            onChange={handleChangeFont} SelectProps={{ native: true }}\r\n          >\r\n            {listFont.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Size</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"fontSize\"\r\n            required select variant=\"outlined\" value={props.fontSize}\r\n            onChange={handleChangeFontSize} SelectProps={{ native: true }}\r\n          >\r\n            {listFontSize.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Indent</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"indent\"\r\n            required select variant=\"outlined\" value={props.indent}\r\n            onChange={handleChangeIndent} SelectProps={{ native: true }}\r\n          >\r\n            {listIndent.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js",["110"],"import React from 'react';\r\nimport {\r\n    Container,\r\n    Button,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: (theme) => ({\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingRight: '0px',\r\n        paddingLeft: '0px',\r\n        backgroundColor: theme.body\r\n    }),\r\n    button: (theme) => ({\r\n        width: '33,3%',\r\n        height: '36px',\r\n        borderRadius: '0px',\r\n        backgroundColor: theme.button,\r\n    }),\r\n    middleButton: (theme) => ({\r\n        borderLeft: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n        borderRight: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n    })\r\n}));\r\n\r\nconst ControlPanel = ({ theme }) => {\r\n    const classes = useStyles(theme);\r\n    const histoty = useHistory();\r\n\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className={classes.root} maxWidth=\"lg\">\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} startIcon={<ArrowBackIosIcon />}\r\n                    onClick={() => { histoty.push(\"/Reading\"); }}\r\n                >\r\n                    Chương trước\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" className={`${classes.button} ${classes.middleButton}`}\r\n                    onClick={() => { histoty.push(\"/Detail\"); }}\r\n\r\n                >\r\n                    Danh sách chương\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} endIcon={<ArrowForwardIosIcon />}\r\n                    onClick={() => { histoty.push(\"/Reading\"); }}\r\n                >\r\n                    Chương sau\r\n            </Button>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js",["111"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n    }\r\n}));\r\n\r\nconst AnalystCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                data: [67, 33],\r\n                backgroundColor: [\r\n                    colors.indigo[500],\r\n                    colors.red[600],\r\n                ],\r\n                borderWidth: 8,\r\n                borderColor: colors.common.white,\r\n                hoverBorderColor: colors.common.white\r\n            }\r\n        ],\r\n        labels: ['Doc', 'Viet']\r\n    };\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    const devices = [\r\n        {\r\n            title: 'Doc',\r\n            value: 67,\r\n            icon: LaptopMacIcon,\r\n            color: colors.indigo[500]\r\n        },\r\n        {\r\n            title: 'Viet',\r\n            value: 33,\r\n            icon: TabletIcon,\r\n            color: colors.red[600]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px', backgroundColor: \"#e5e5e5\"}}\r\n        >\r\n            <CardHeader title=\"THỜI GIAN\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <Doughnut\r\n                        data={data}\r\n                        options={options}\r\n                    />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    {devices.map(({\r\n                                      color,\r\n                                      icon: Icon,\r\n                                      title,\r\n                                      value\r\n                                  }) => (\r\n                        <Box\r\n                            key={title}\r\n                            p={1}\r\n                            textAlign=\"center\"\r\n                        >\r\n                            <Icon color=\"action\" />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                            >\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{ color }}\r\n                                variant=\"h4\"\r\n                            >\r\n                                {value}\r\n                                %\r\n                            </Typography>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAnalystCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AnalystCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js",["112","113","114","115"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\nconst FavoriteCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px', backgroundColor: \"#e5e5e5\"}}\r\n        >\r\n            <CardHeader title=\"DANH SÁCH YÊU THÍCH\" />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <FavoriteIcon style={{ fontSize: 100 , color: red[500]}} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    align-itmes=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFavoriteCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default FavoriteCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js",["116","117","118"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\nconst ManagementCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px', backgroundColor: \"#e5e5e5\"}}\r\n        >\r\n            <CardHeader title=\"QUẢN LÝ TRUYỆN\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AppsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nManagementCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default ManagementCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js",["119","120"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\nconst SettingCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px', backgroundColor: \"#e5e5e5\"}}\r\n        >\r\n            <CardHeader title=\"CÀI ĐẶT\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <SettingsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>CÀI ĐẶT</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSettingCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SettingCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js",["121","122","123"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n  Chip\r\n} from '@material-ui/core';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport defaultImg from '../../resources/images/defaultAvatar.png';\r\n\r\nconst user = {\r\n  avatar: defaultImg,\r\n  city: 'Ho Chi Minh City',\r\n  country: 'Viet Nam',\r\n  jobTitle: 'Author',\r\n  name: 'Nguyen Quang Minh',\r\n  email: \"quangminh@gmail.com\",\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: '24px',\r\n    marginBottom: '24px'\r\n  },\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n  chip: {\r\n    margin: '5px',\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClick = () => {\r\n    console.info('You clicked the Chip.');\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <div>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                src={user.avatar}\r\n            />\r\n          </div>\r\n          <div justifyContent=\"flex-start\">\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h3\"\r\n            >\r\n              {user.name}\r\n            </Typography>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"body1\"\r\n            >\r\n              {user.email}\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body1\"\r\n            >\r\n              {`${user.city} ${user.country}`}\r\n            </Typography>\r\n            <Typography\r\n                className={classes.dateText}\r\n                color=\"textSecondary\"\r\n                variant=\"body1\"\r\n            >\r\n              {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n            </Typography>\r\n            <Typography >\r\n              <Chip className={classes.chip} icon={<FaceIcon/>} label={\"Excelent Author\"} color=\"primary\" variant=\"outlined\"/>\r\n              <Chip className={classes.chip} label=\"#Basic_Reader\"/>\r\n              <Chip className={classes.chip} avatar={<Avatar>M</Avatar>} label=\"Clickable\" onClick={handleClick} variant=\"outlined\"/>\r\n            </Typography>\r\n          </div>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js",["124","125"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '../../resources/images/portrait.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.grow} >\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#2196F3\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            style={{ marginRight: '-5px' }}\r\n          >\r\n            <LibraryBooksIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h5\" noWrap style={{ fontWeight: \"bold\" }}>\r\n            WeRe\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Tìm kiếm…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={'primary-search-account-menu'}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              {/* <AccountCircle /> */}\r\n              <img width={\"40\"} height={\"40px\"} src={Avatar} style={{ borderRadius: \"50%\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={'primary-search-account-menu'}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":231,"column":6,"nodeType":"132","endLine":231,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":9,"column":3,"nodeType":"136","messageId":"137","endLine":9,"endColumn":11},{"ruleId":"134","severity":1,"message":"138","line":86,"column":23,"nodeType":"136","messageId":"137","endLine":86,"endColumn":37},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"140","line":5,"column":5,"nodeType":"136","messageId":"137","endLine":5,"endColumn":15},{"ruleId":"134","severity":1,"message":"141","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"142","line":411,"column":6,"nodeType":"132","endLine":411,"endColumn":36,"suggestions":"143"},{"ruleId":"130","severity":1,"message":"144","line":418,"column":6,"nodeType":"132","endLine":418,"endColumn":19,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":477,"column":29,"nodeType":"148","endLine":477,"endColumn":162},{"ruleId":"146","severity":1,"message":"147","line":492,"column":29,"nodeType":"148","endLine":492,"endColumn":162},{"ruleId":"134","severity":1,"message":"149","line":65,"column":24,"nodeType":"136","messageId":"137","endLine":65,"endColumn":39},{"ruleId":"134","severity":1,"message":"150","line":66,"column":20,"nodeType":"136","messageId":"137","endLine":66,"endColumn":31},{"ruleId":"134","severity":1,"message":"151","line":67,"column":22,"nodeType":"136","messageId":"137","endLine":67,"endColumn":35},{"ruleId":"134","severity":1,"message":"152","line":37,"column":11,"nodeType":"136","messageId":"137","endLine":37,"endColumn":23},{"ruleId":"134","severity":1,"message":"153","line":17,"column":8,"nodeType":"136","messageId":"137","endLine":17,"endColumn":17},{"ruleId":"134","severity":1,"message":"154","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":18},{"ruleId":"134","severity":1,"message":"155","line":10,"column":5,"nodeType":"136","messageId":"137","endLine":10,"endColumn":12},{"ruleId":"134","severity":1,"message":"156","line":12,"column":5,"nodeType":"136","messageId":"137","endLine":12,"endColumn":11},{"ruleId":"134","severity":1,"message":"157","line":30,"column":11,"nodeType":"136","messageId":"137","endLine":30,"endColumn":18},{"ruleId":"134","severity":1,"message":"156","line":12,"column":5,"nodeType":"136","messageId":"137","endLine":12,"endColumn":11},{"ruleId":"134","severity":1,"message":"158","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":20},{"ruleId":"134","severity":1,"message":"157","line":28,"column":11,"nodeType":"136","messageId":"137","endLine":28,"endColumn":18},{"ruleId":"134","severity":1,"message":"156","line":12,"column":5,"nodeType":"136","messageId":"137","endLine":12,"endColumn":11},{"ruleId":"134","severity":1,"message":"157","line":27,"column":11,"nodeType":"136","messageId":"137","endLine":27,"endColumn":18},{"ruleId":"134","severity":1,"message":"159","line":8,"column":3,"nodeType":"136","messageId":"137","endLine":8,"endColumn":9},{"ruleId":"134","severity":1,"message":"160","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":14},{"ruleId":"134","severity":1,"message":"155","line":12,"column":3,"nodeType":"136","messageId":"137","endLine":12,"endColumn":10},{"ruleId":"134","severity":1,"message":"161","line":81,"column":10,"nodeType":"136","messageId":"137","endLine":81,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":140,"column":15,"nodeType":"148","endLine":140,"endColumn":96},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["164"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'setChapterList' is assigned a value but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","React Hook React.useEffect has a missing dependency: 'novels'. Either include it or remove the dependency array.",["165"],"React Hook React.useEffect has missing dependencies: 'allTime', 'topMonth', and 'topWeek'. Either include them or remove the dependency array.",["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setListFontSize' is assigned a value but never used.","'setListFont' is assigned a value but never used.","'setListIndent' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'PhoneIcon' is defined but never used.","'Doughnut' is defined but never used.","'Divider' is defined but never used.","'colors' is defined but never used.","'options' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'mobileMoreAnchorEl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [values]",{"range":"173","text":"174"},"Update the dependencies array to be: [chosenCategory, novels, sortStrategy]",{"range":"175","text":"176"},"Update the dependencies array to be: [allTime, topMonth, topStrategy, topWeek]",{"range":"177","text":"178"},[4220,4222],"[values]",[14605,14635],"[chosenCategory, novels, sortStrategy]",[14829,14842],"[allTime, topMonth, topStrategy, topWeek]"]