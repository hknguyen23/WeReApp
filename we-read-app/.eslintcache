[{"D:\\Github\\WeReApp\\we-read-app\\src\\index.js":"1","D:\\Github\\WeReApp\\we-read-app\\src\\App.js":"2","D:\\Github\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js":"3","D:\\Github\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js":"4","D:\\Github\\WeReApp\\we-read-app\\src\\components\\home\\home.js":"5","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js":"6","D:\\Github\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js":"7","D:\\Github\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js":"8","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js":"9","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js":"10","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js":"11","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js":"12","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js":"13","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js":"14","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js":"15","D:\\Github\\WeReApp\\we-read-app\\src\\resources\\data\\data.js":"16","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js":"17","D:\\Github\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js":"18","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js":"19","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js":"20","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js":"21","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js":"22","D:\\Github\\WeReApp\\we-read-app\\src\\components\\searching\\searching.js":"23"},{"size":183,"mtime":1608730772288,"results":"24","hashOfConfig":"25"},{"size":1943,"mtime":1610022619007,"results":"26","hashOfConfig":"25"},{"size":484,"mtime":1609988336926,"results":"27","hashOfConfig":"25"},{"size":5706,"mtime":1610023713966,"results":"28","hashOfConfig":"25"},{"size":16532,"mtime":1610028360362,"results":"29","hashOfConfig":"25"},{"size":2150,"mtime":1609988337023,"results":"30","hashOfConfig":"25"},{"size":17824,"mtime":1610041431938,"results":"31","hashOfConfig":"25"},{"size":18629,"mtime":1609988337105,"results":"32","hashOfConfig":"25"},{"size":4096,"mtime":1609988337089,"results":"33","hashOfConfig":"25"},{"size":4493,"mtime":1609988336984,"results":"34","hashOfConfig":"25"},{"size":2637,"mtime":1609988336988,"results":"35","hashOfConfig":"25"},{"size":2516,"mtime":1609988336992,"results":"36","hashOfConfig":"25"},{"size":2455,"mtime":1609988336992,"results":"37","hashOfConfig":"25"},{"size":2804,"mtime":1609988336988,"results":"38","hashOfConfig":"25"},{"size":2573,"mtime":1609988336984,"results":"39","hashOfConfig":"25"},{"size":15233,"mtime":1610041593086,"results":"40","hashOfConfig":"25"},{"size":574,"mtime":1609988337077,"results":"41","hashOfConfig":"25"},{"size":652,"mtime":1609988337093,"results":"42","hashOfConfig":"25"},{"size":4405,"mtime":1609988337068,"results":"43","hashOfConfig":"25"},{"size":4125,"mtime":1609988337077,"results":"44","hashOfConfig":"25"},{"size":5182,"mtime":1610030385878,"results":"45","hashOfConfig":"25"},{"size":2199,"mtime":1609988337038,"results":"46","hashOfConfig":"25"},{"size":12984,"mtime":1610041355209,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"16nb1l4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Github\\WeReApp\\we-read-app\\src\\index.js",[],["107","108"],"D:\\Github\\WeReApp\\we-read-app\\src\\App.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js",["109","110","111","112","113","114","115","116"],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\home\\home.js",["117"],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js",["118","119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Button, Box\r\n} from '@material-ui/core';\r\nimport AnalystCard from \"./AnalystCard\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport ManagementCard from \"./ManagementCard\";\r\nimport SettingCard from \"./SettingCard\";\r\nimport Infor from \"./Infor\";\r\nimport AddNovel from \"./AddNovel\";\r\n\r\nfunction Profile() {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Grid>\r\n                <Infor />\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"  justify=\"center\"  alignItems=\"center\"\r\n            >\r\n                <Grid\r\n                    item\r\n                >\r\n                    <Button\r\n                        size=\"large\"\r\n                    >\r\n                        <FavoriteCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\">\r\n                        <AnalystCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\"\r\n                            onClick={() => { history.push(\"/Uploading\"); }}\r\n                    >\r\n                        <AddNovel />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\"\r\n                    >\r\n                        <ManagementCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\">\r\n                        <SettingCard />\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js",["121"],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js",["122"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Checkbox,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport GroupHeader from './groupHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    width: '90%',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: {\r\n    padding: '16px 20px',\r\n  },\r\n  inputLabel: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: '8px 0px 24px 0px',\r\n    fontSize: 16,\r\n  },\r\n  editorStyleDes: {\r\n    minHeight: '200px',\r\n    maxHeight: '200px',\r\n  },\r\n  editorStyleChapter: {\r\n    minHeight: '400px',\r\n    maxHeight: '400px',\r\n  },\r\n  toolbarStyle: {\r\n    marginBottom: '0px',\r\n    borderBottom: \"1px solid #C0C0C0\",\r\n  },\r\n  wrapperStyle: {\r\n    border: \"1px solid #C0C0C0\",\r\n  },\r\n\r\n  formCheckBoxGrid: {\r\n    textAlign: 'left',\r\n    width: '100%',\r\n    marginBottom: '5px',\r\n    direction: \"row\",\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n\r\n  },\r\n  formCheckBoxGridItem: {\r\n    marginBottom: '-10px'\r\n  },\r\n  FormHelperText: {\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  imageBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n\r\n  },\r\n  image: {\r\n    height: '168px',\r\n    width: '168px',\r\n    paddingBottom: '10px'\r\n  },\r\n  imageButton: {\r\n    width: '117px',\r\n    height: '36px',\r\n    backgroundColor: '#2196F3',\r\n    marginRight: '10px',\r\n    textTransform: 'none',\r\n  },\r\n  deleteImageButton: {\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    textTransform: 'none',\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  uploadButton: {\r\n    backgroundColor: '#2196F3',\r\n    color: '#FFFFFF',\r\n  }\r\n\r\n\r\n}));\r\n\r\nconst ageGroup = [\r\n  {\r\n    value: 'all',\r\n    label: 'Mọi lứa tuổi'\r\n  },\r\n  {\r\n    value: 'teen',\r\n    label: 'Teen'\r\n  },\r\n  {\r\n    value: '18',\r\n    label: 'Trên 18 tuổi'\r\n  }\r\n];\r\n\r\nconst language = [\r\n  {\r\n    value: 'vietnam',\r\n    label: 'Tiếng Việt'\r\n  },\r\n  {\r\n    value: 'english',\r\n    label: 'Tiếng Anh'\r\n  },\r\n  {\r\n    value: 'another',\r\n    label: 'Ngôn ngữ khác'\r\n  }\r\n];\r\n\r\nconst genre = [\r\n  {\r\n    value: 'action',\r\n    label: 'Hành động'\r\n  },\r\n  {\r\n    value: 'comedy',\r\n    label: 'Hài hước'\r\n  },\r\n  {\r\n    value: 'horror',\r\n    label: 'Kinh dị'\r\n  },\r\n  {\r\n    value: 'stragedy',\r\n    label: 'Bi kịch'\r\n  },\r\n  {\r\n    value: 'romance',\r\n    label: 'Tình cảm'\r\n  },\r\n  {\r\n    value: 'history',\r\n    label: 'Lịch sử'\r\n  },\r\n];\r\n\r\nconst tags = [\r\n  {\r\n    value: 'Male lead',\r\n    label: 'Nam chinh'\r\n  },\r\n  {\r\n    value: 'Female lead',\r\n    label: 'Nữ chính'\r\n  },\r\n\r\n\r\n];\r\n\r\nfunction Uploading() {\r\n  const histoty = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    genre: {},\r\n    tags: {},\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  const [preview, setPreview] = useState()\r\n\r\n  // intial data\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    var temp = {};\r\n    for (var i = 0; i < genre.length; i++) {\r\n      temp[genre[i].value] = false;\r\n    }\r\n    var temp2 = {};\r\n    for (var j = 0; j < tags.length; j++) {\r\n      temp2[tags[j].value] = false;\r\n    }\r\n\r\n    setValues({\r\n      ...values,\r\n      genre: temp,\r\n      tags: temp2\r\n    });\r\n  }, [])\r\n\r\n  // upload image \r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile)\r\n    setPreview(objectUrl)\r\n\r\n    // free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl)\r\n  }, [selectedFile])\r\n\r\n  const onSelectFile = e => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined)\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n    e.target.value = '';\r\n  }\r\n\r\n  const onDeleteImage = (e) => {\r\n    setSelectedFile(undefined)\r\n    return;\r\n  }\r\n\r\n  // handle change of form\r\n  const handleChange = (event) => {                     // change textfield\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const handleChangeEditorDes = (editorState) => {      // change long des editor \r\n    setValues({\r\n      ...values,\r\n      longDes: editorState\r\n    });\r\n  };\r\n  const handleChangeEditorData = (editorState) => {   // change data editor \r\n    setValues({\r\n      ...values,\r\n      data: editorState\r\n    });\r\n  };\r\n  const handleChangeGenre = (event) => {             // change genre checkbox \r\n    setValues({\r\n      ...values,\r\n      genre: { ...values.genre, [event.target.name]: event.target.checked }\r\n    });\r\n  }\r\n  const handleChangeTags = (event) => {            // change tags checkbox \r\n    setValues({\r\n      ...values,\r\n      tags: { ...values.tags, [event.target.name]: event.target.checked }\r\n    });\r\n\r\n  }\r\n\r\n  // validate for form\r\n  const handleValidate = (event) => {                 // validate textfield\r\n    if ((event.target.name === 'title' || event.target.name === 'titleChapter') && event.target.value === '') {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"\"\r\n      });\r\n    }\r\n  }\r\n  const handleValidateEditorDes = (e, editorState) => {   // validate editor\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleValidateEditorData = (e, editorState) => {\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  var genreList = Object.entries(values.genre);                     // validate genre checkbox\r\n  const errorGenre = genreList.filter((v) => v[1] === true).length > 4;\r\n\r\n\r\n  // submit form\r\n  const onSubmit = (event) => {\r\n    var tempErrors = { ...errors };;\r\n    if (values.title === '') {\r\n      tempErrors.title = \"* Không được để trống\";\r\n    }\r\n    if (values.titleChapter === '') {\r\n      tempErrors.titleChapter = \"* Không được để trống\";\r\n    }\r\n    if (values.longDes === '' || !values.longDes.getCurrentContent().hasText()) {\r\n      tempErrors.longDes = \"* Không được để trống\";\r\n    }\r\n    if (values.data === '' || !values.data.getCurrentContent().hasText()) {\r\n      tempErrors.data = \"* Không được để trống\";\r\n    }\r\n    setErrors(tempErrors);\r\n\r\n    var errorList = Object.entries(tempErrors);\r\n    const hasError = errorList.filter((v) => v[1] !== '').length > 0;\r\n    if (hasError || errorGenre) {\r\n      console.log(tempErrors)\r\n    }\r\n    else {\r\n      histoty.push(\"/Detail/1\");\r\n      console.log(values)\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth={false}>\r\n      <form autoComplete=\"off\" noValidate>\r\n        <Card>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đăng truyện mới\" />\r\n\r\n          <GroupHeader title=\"Thông tin cơ bản\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.title !== '' ? true : false}\r\n                  helperText={errors.title !== '' ? errors.title : ''}\r\n                  fullWidth\r\n                  name=\"title\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả ngắn</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={false}\r\n                  helperText={false ? \"daw\" : \"\"}\r\n                  fullWidth\r\n                  name=\"shortDes\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả dài</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleDes}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorDes}\r\n                  onBlur={handleValidateEditorDes}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.longDes !== '' ? errors.longDes : ''}\r\n                </FormHelperText>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Thông tin chi tiết\" />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Độ tuổi </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"age\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {ageGroup.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ngôn ngữ</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {language.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Thể loại</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {genre.map(genre => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeGenre} name={genre.value} />}\r\n                        label={genre.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText} error={errorGenre}> * Tối đa 4 thể loại </FormHelperText>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tags</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {tags.map(tags => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeTags} name={tags.value} />}\r\n                        label={tags.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText}> </FormHelperText>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Ảnh\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ảnh bìa truyện </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <div className={classes.imageBox}>\r\n                  <img className={classes.image} src={preview} alt='' />\r\n                  <Box>\r\n                    <Button className={classes.imageButton} color=\"primary\" variant=\"contained\" component=\"label\">\r\n                      Đăng ảnh\r\n                    <input type='file' hidden onChange={onSelectFile} />\r\n                    </Button>\r\n                    <Button className={classes.deleteImageButton} color=\"primary\" size=\"small\" onClick={onDeleteImage}>\r\n                      Xóa\r\n                    </Button>\r\n                  </Box>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Chương truyện đầu tiên\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề chương </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.titleChapter !== '' ? true : false}\r\n                  helperText={errors.titleChapter !== '' ? errors.titleChapter : ''}\r\n                  fullWidth\r\n                  name=\"titleChapter\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Nội dung</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleChapter}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorData}\r\n                  onBlur={handleValidateEditorData}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.data !== '' ? errors.data : ''}\r\n                </FormHelperText>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" p={2} >\r\n            <Button className={classes.uploadButton} color='primary' variant=\"contained\" onClick={onSubmit}>\r\n              Đăng truyện\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Uploading;","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js",["123","124","125","126"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './globalStyles';\r\nimport { lightTheme, darkTheme } from '../../constants/config.json';\r\n\r\nimport ReadingPanel from './ReadingPanel';\r\nimport InfoPanel from './InfoPanel';\r\nimport Toolbar from './Toolbar';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    width: '90%',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: '24px',\r\n    paddingTop: '24px',\r\n  }),\r\n  card: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    border: theme.fieldBorder,\r\n  }),\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    padding: '5px 0px',\r\n    backgroundColor: theme.body,\r\n  }),\r\n  divider: (theme) => ({\r\n    border: theme.fieldBorder\r\n  })\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    number: 1,\r\n    title: 'Tiêu đề chương 1',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 2,\r\n    title: 'Tiêu đề chương 2',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 3,\r\n    title: 'Tiêu đề chương 3',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 4,\r\n    title: 'Tiêu đề chương 4 ',\r\n    selected: true,\r\n  },\r\n  {\r\n    number: 5,\r\n    title: 'Tiêu đề chương 5',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 6,\r\n    title: 'Tiêu đề chương 6',\r\n    selected: false,\r\n  },\r\n\r\n]\r\n\r\nconst Reading = () => {\r\n  const [chapterList, setChapterList] = useState(data);\r\n  const [font, setFont] = useState(\"Arial\");\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [indent, setIndent] = useState('90%');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const ID = useParams().fictionID;\r\n  const classes = useStyles(isDarkMode ? darkTheme : lightTheme);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n\r\n  const selected = chapterList.filter((chapter) => chapter.selected === true);\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n        <GlobalStyles />\r\n      </ThemeProvider>\r\n\r\n      <Container className={classes.root} maxWidth=\"false\">\r\n        <Card className={classes.card}>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đọc truyện\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <InfoPanel theme={isDarkMode ? darkTheme : lightTheme} ID={ID} />\r\n            <Divider className={classes.divider} />\r\n            <Toolbar\r\n              font={font} setFont={(i) => setFont(i)}\r\n              fontSize={fontSize} setFontSize={(i) => setFontSize(i)}\r\n              indent={indent} setIndent={(i) => setIndent(i)}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n              isDarkMode={isDarkMode}\r\n              setIsDarkMode={setIsDarkMode}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n            <ReadingPanel\r\n              selected={selected[0]}\r\n              font={font}\r\n              fontSize={fontSize}\r\n              indent={indent}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Reading;","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js",["127"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #fac150 30%, #fccf2b 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(197, 199, 197 .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst AnalystCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                data: [67, 33],\r\n                backgroundColor: [\r\n                    colors.indigo[500],\r\n                    colors.red[600],\r\n                ],\r\n                borderWidth: 8,\r\n                borderColor: colors.common.white,\r\n                hoverBorderColor: colors.common.white\r\n            }\r\n        ],\r\n        labels: ['Đọc', 'Viết']\r\n    };\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    const devices = [\r\n        {\r\n            title: 'Đọc',\r\n            value: 67,\r\n            icon: LaptopMacIcon,\r\n            color: colors.indigo[500]\r\n        },\r\n        {\r\n            title: 'Viết',\r\n            value: 33,\r\n            icon: TabletIcon,\r\n            color: colors.red[600]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"THỜI GIAN\" />\r\n            <Divider variant=\"middle\" />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <Doughnut\r\n                        data={data}\r\n                        options={options}\r\n                    />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    {devices.map(({\r\n                                      color,\r\n                                      icon: Icon,\r\n                                      title,\r\n                                      value\r\n                                  }) => (\r\n                        <Box\r\n                            key={title}\r\n                            p={1}\r\n                            textAlign=\"center\"\r\n                        >\r\n                            <Icon color=\"action\" />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                            >\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{ color }}\r\n                                variant=\"h4\"\r\n                            >\r\n                                {value}\r\n                                %\r\n                            </Typography>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAnalystCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AnalystCard;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js",["128","129","130"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #f2775e 30%, #f28872 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(242, 24, 39, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst FavoriteCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"yêu thích\" />\r\n            <Divider variant=\"middle\" />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <FavoriteIcon style={{ fontSize: 100 , color: red[500]}} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    align-itmes=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN YÊU THÍCH</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFavoriteCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default FavoriteCard;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js",["131","132","133"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst ManagementCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"QUẢN LÝ\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AppsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN ĐÃ ĐĂNG</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nManagementCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default ManagementCard;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js",["134","135"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #4d4d4d 30%, #a8a7a7 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst SettingCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"CÀI ĐẶT\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <SettingsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>THAY ĐỔI THÔNG SỐ</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSettingCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SettingCard;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js",["136","137","138","139"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n  Chip\r\n} from '@material-ui/core';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport defaultImg from '../../resources/images/portrait.jpg';\r\n\r\nconst user = {\r\n  avatar: defaultImg,\r\n  city: 'Ho Chi Minh City',\r\n  country: 'Viet Nam',\r\n  jobTitle: 'Author',\r\n  name: 'Nguyen Quang Minh',\r\n  email: \"quangminh@gmail.com\",\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: '24px',\r\n    marginBottom: '24px'\r\n  },\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n  chip: {\r\n    margin: '5px',\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClick = () => {\r\n    console.info('You clicked the Chip.');\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <div>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                src={user.avatar}\r\n            />\r\n          </div>\r\n          <div display=\"flex\" justifyContent=\"flex-start\">\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h3\"\r\n            >\r\n              {user.name}\r\n            </Typography>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"body1\"\r\n            >\r\n              {user.email}\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"body1\"\r\n            >\r\n              {`${user.city} ${user.country}`}\r\n            </Typography>\r\n            <Typography\r\n                className={classes.dateText}\r\n                color=\"textSecondary\"\r\n                variant=\"body1\"\r\n            >\r\n              {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n            </Typography>\r\n            <Typography >\r\n              <Chip className={classes.chip} icon={<FaceIcon/>} label={\"Excelent Author\"} color=\"primary\" variant=\"outlined\"/>\r\n              <Chip className={classes.chip} label=\"#Basic_Reader\"/>\r\n              <Chip className={classes.chip} avatar={<Avatar>M</Avatar>} label=\"Best_author\" variant=\"outlined\"/>\r\n            </Typography>\r\n          </div>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js",["140","141"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #82f76d 30%, #53fa34 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(17, 245, 51 .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n\r\n}));\r\n\r\nconst AddNovel = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            // style={{ height: '400px', width: '300px', backgroundColor: \"#f5f5f5\"}}\r\n            style={{ height: '400px', width: '300px'}}\r\n\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}}  title=\"TRUYỆN\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AddCircleOutlineIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>ĐĂNG TRUYỆN / CẬP NHẬT TRUYỆN</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAddNovel.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AddNovel;\r\n","D:\\Github\\WeReApp\\we-read-app\\src\\resources\\data\\data.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js",["142"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: '100px',\r\n    backgroundColor: theme.body,\r\n    paddingTop: '30px',\r\n    paddingBottom: '40px'\r\n  }),\r\n  title: (theme) => ({\r\n    fontSize: '24px',\r\n    marginTop: '10px',\r\n    color: theme.text,\r\n  }),\r\n  paragraph:  (theme) => ({\r\n    lineHeight: 1.6,\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    whiteSpace: 'pre-wrap',\r\n    textAlign: 'justify',\r\n    color: theme.text\r\n  }),\r\n}));\r\n\r\nconst data = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum, neque eu aliquet suscipit, dolor est tincidunt quam, vel volutpat metus dolor vitae justo. Cras ac mauris mattis, facilisis lacus ut, euismod arcu. Maecenas tincidunt, risus at dapibus congue, risus purus sodales erat, sit amet ultricies purus metus eget libero. Fusce quis lorem sapien. Aliquam erat volutpat. Nullam porttitor mollis varius. Morbi viverra nulla vel sapien lobortis, vitae consectetur augue pharetra. Etiam quis iaculis nibh. Sed pretium tincidunt felis, eget venenatis lorem volutpat eget.\\nVivamus molestie, libero ut scelerisque viverra, sapien nisl faucibus diam, a pellentesque dui nunc maximus felis. Aliquam lacinia ipsum non enim varius, eget malesuada velit gravida. Proin et congue sapien, nec congue erat. Aliquam vitae erat magna. Interdum et malesuada fames ac ante ipsum primis in faucibus. Praesent eu finibus sapien. Vestibulum nisl arcu, faucibus id risus sed, bibendum condimentum dolor. Nunc dapibus efficitur arcu vitae ultricies.\\nSed vitae eros sit amet odio dictum porttitor sed id odio. Sed sagittis dolor quis odio dapibus accumsan. Ut eget velit nibh. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Curabitur tristique elit leo. Nunc vel lectus pretium, venenatis turpis pulvinar, rhoncus odio. Praesent eget odio sed massa semper mattis. Vivamus feugiat tempor leo non fringilla. Integer eu hendrerit mi. Maecenas semper ullamcorper tellus, et consequat justo blandit sit amet. Vestibulum accumsan, magna ut aliquet dictum, nisl nisi blandit sem, non viverra magna sapien vitae ex. Maecenas facilisis orci nec vestibulum commodo. Integer felis felis, aliquam sed condimentum vitae, varius scelerisque odio. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\\nSed eleifend mattis ullamcorper. Sed porta sem vel nibh blandit, nec dapibus justo interdum. Duis diam libero, volutpat ut pellentesque in, ultrices a ipsum. Nulla quis elementum libero, efficitur sollicitudin elit. Sed facilisis magna non lacus mattis, vitae convallis magna suscipit. Nunc eu enim sit amet mauris ultricies lacinia ut vitae erat. Fusce aliquet metus eu sem mollis faucibus. Integer leo urna, aliquam quis leo nec, congue dignissim diam. Curabitur sed purus risus. Vivamus auctor arcu eu augue rutrum rhoncus. Nullam maximus ligula in diam pharetra cursus. Nullam quis imperdiet enim, eu congue eros. Nunc luctus diam in urna interdum maximus. Pellentesque maximus nunc ut blandit fermentum. Morbi rhoncus purus egestas ipsum fringilla vestibulum.\\nMorbi in magna dui. Integer nunc nibh, posuere eu vulputate eget, eleifend sed neque. Nunc non ante egestas, consectetur arcu eget, elementum lectus. Proin congue nibh in accumsan lacinia. Ut efficitur tincidunt tincidunt. Nullam eu tellus et sem fermentum scelerisque. Integer suscipit, nisl eu rhoncus eleifend, nibh erat faucibus orci, sed aliquam sem turpis sit amet orci.\"\r\nconst ReadingPanel = (props) => {\r\n  const classes = useStyles(props.theme);\r\n\r\n  const customStyle = {\r\n    fontSize: props.fontSize + 'px',\r\n    width: props.indent,\r\n    fontFamily: props.font,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"lg\" className={classes.container} maxWidth={false}>\r\n        <div className={classes.title}>\r\n          Chapter {props.selected.number}\r\n        </div>\r\n        <div className={classes.title}>\r\n          {props.selected.title}\r\n        </div>\r\n        <div className={`${classes.paragraph}`} style={customStyle}>\r\n          {data}\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ReadingPanel;","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js",["143","144","145"],"import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Switch,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.body\r\n  }),\r\n  toolbar: (theme) => ({\r\n    width: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '14px',\r\n    fontSize: '20px',\r\n    color: theme.text\r\n  }),\r\n  marginIcon: {\r\n    marginRight: '5px'\r\n  },\r\n  marginGroup: {\r\n    marginRight: '24px'\r\n  },\r\n  fontIcon: {\r\n    width: '33px',\r\n    height: '33px',\r\n    color: '#2F80ED',\r\n  },\r\n  fontDropdown: {\r\n    width: '200px'\r\n  },\r\n  textField: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    \"& .MuiInputBase-root\": {\r\n      color: theme.text,\r\n      border: theme.fieldBorder,\r\n      backgroundColor: theme.fieldBackground,\r\n      \"& option\": {\r\n        backgroundColor: theme.body,\r\n      }\r\n    },\r\n    \"& .MuiSelect-icon\": {\r\n      color: theme.text,\r\n    }\r\n  }),\r\n}));\r\n\r\nconst data1 = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28];\r\nconst data2 = ['Arial', 'Roboto', 'Cambria', 'Georgia', 'Times New Roman'];\r\nconst data3 = ['50%', '60%', '70%', '80%', '90%'];\r\n\r\nconst Toolbar = (props) => {\r\n  const classes = useStyles(props.theme);\r\n  const [listFontSize, setListFontSize] = useState(data1);\r\n  const [listFont, setListFont] = useState(data2);\r\n  const [listIndent, setListIndent] = useState(data3);\r\n\r\n  const handleChangeFont = (e) => {\r\n    props.setFont(e.target.value);\r\n  }\r\n  const handleChangeFontSize = (e) => {\r\n    props.setFontSize(e.target.value);\r\n  }\r\n  const handleChangeIndent = (e) => {\r\n    props.setIndent(e.target.value);\r\n  }\r\n\r\n  const handleChangeTheme = () => {\r\n    if (props.isDarkMode) {\r\n      props.setIsDarkMode(false);\r\n    }\r\n    else {\r\n      props.setIsDarkMode(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className={classes.root} maxWidth={false}>\r\n        <Box className={classes.toolbar}>\r\n          <Typography className={classes.marginIcon}>Dark mode</Typography>\r\n          <Switch className={classes.marginGroup} onChange={handleChangeTheme}\r\n            color=\"secondary\" name=\"dark\"\r\n          />\r\n          <FontDownloadIcon className={`${classes.fontIcon} ${classes.marginIcon}`} />\r\n          <TextField className={`${classes.fontDropdown} ${classes.marginGroup} ${classes.textField}`}\r\n            size=\"small\" name=\"font\" required select variant=\"outlined\" value={props.font}\r\n            onChange={handleChangeFont} SelectProps={{ native: true }}\r\n          >\r\n            {listFont.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Size</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"fontSize\"\r\n            required select variant=\"outlined\" value={props.fontSize}\r\n            onChange={handleChangeFontSize} SelectProps={{ native: true }}\r\n          >\r\n            {listFontSize.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Indent</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"indent\"\r\n            required select variant=\"outlined\" value={props.indent}\r\n            onChange={handleChangeIndent} SelectProps={{ native: true }}\r\n          >\r\n            {listIndent.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js",["146","147"],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js",["148"],"import React from 'react';\r\nimport {\r\n    Container,\r\n    Button,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: (theme) => ({\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingRight: '0px',\r\n        paddingLeft: '0px',\r\n        backgroundColor: theme.body\r\n    }),\r\n    button: (theme) => ({\r\n        width: '33,3%',\r\n        height: '36px',\r\n        borderRadius: '0px',\r\n        backgroundColor: theme.button,\r\n    }),\r\n    middleButton: (theme) => ({\r\n        borderLeft: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n        borderRight: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n    })\r\n}));\r\n\r\nconst ControlPanel = ({ theme }) => {\r\n    const classes = useStyles(theme);\r\n    const histoty = useHistory();\r\n\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className={classes.root} maxWidth={false}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} startIcon={<ArrowBackIosIcon />}\r\n                    onClick={() => { histoty.push(\"/Reading\"); }}\r\n                >\r\n                    Chương trước\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" className={`${classes.button} ${classes.middleButton}`}\r\n                    onClick={() => { histoty.push(\"1\"); }}\r\n\r\n                >\r\n                    Danh sách chương\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} endIcon={<ArrowForwardIosIcon />}\r\n                    onClick={() => { histoty.push(\"/Reading\"); }}\r\n                >\r\n                    Chương sau\r\n            </Button>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;","D:\\Github\\WeReApp\\we-read-app\\src\\components\\searching\\searching.js",["149","150","151","152","153","154","155","156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":12},{"ruleId":"164","severity":1,"message":"169","line":83,"column":10,"nodeType":"166","messageId":"167","endLine":83,"endColumn":28},{"ruleId":"164","severity":1,"message":"170","line":86,"column":9,"nodeType":"166","messageId":"167","endLine":86,"endColumn":19},{"ruleId":"164","severity":1,"message":"171","line":96,"column":9,"nodeType":"166","messageId":"167","endLine":96,"endColumn":24},{"ruleId":"164","severity":1,"message":"172","line":110,"column":9,"nodeType":"166","messageId":"167","endLine":110,"endColumn":24},{"ruleId":"173","severity":1,"message":"174","line":165,"column":15,"nodeType":"175","endLine":165,"endColumn":40},{"ruleId":"176","severity":1,"message":"177","line":168,"column":15,"nodeType":"178","endLine":168,"endColumn":96},{"ruleId":"176","severity":1,"message":"177","line":185,"column":27,"nodeType":"178","endLine":185,"endColumn":131},{"ruleId":"164","severity":1,"message":"179","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"180","line":6,"column":5,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"181","line":7,"column":13,"nodeType":"166","messageId":"167","endLine":7,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":236,"column":6,"nodeType":"184","endLine":236,"endColumn":8,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":231,"column":6,"nodeType":"184","endLine":231,"endColumn":8,"suggestions":"187"},{"ruleId":"164","severity":1,"message":"188","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":20},{"ruleId":"164","severity":1,"message":"189","line":2,"column":33,"nodeType":"166","messageId":"167","endLine":2,"endColumn":37},{"ruleId":"164","severity":1,"message":"190","line":10,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":11},{"ruleId":"164","severity":1,"message":"191","line":87,"column":23,"nodeType":"166","messageId":"167","endLine":87,"endColumn":37},{"ruleId":"164","severity":1,"message":"192","line":17,"column":8,"nodeType":"166","messageId":"167","endLine":17,"endColumn":17},{"ruleId":"164","severity":1,"message":"193","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":18},{"ruleId":"164","severity":1,"message":"194","line":12,"column":5,"nodeType":"166","messageId":"167","endLine":12,"endColumn":11},{"ruleId":"164","severity":1,"message":"195","line":41,"column":11,"nodeType":"166","messageId":"167","endLine":41,"endColumn":18},{"ruleId":"164","severity":1,"message":"194","line":12,"column":5,"nodeType":"166","messageId":"167","endLine":12,"endColumn":11},{"ruleId":"164","severity":1,"message":"196","line":16,"column":8,"nodeType":"166","messageId":"167","endLine":16,"endColumn":20},{"ruleId":"164","severity":1,"message":"195","line":39,"column":11,"nodeType":"166","messageId":"167","endLine":39,"endColumn":18},{"ruleId":"164","severity":1,"message":"194","line":12,"column":5,"nodeType":"166","messageId":"167","endLine":12,"endColumn":11},{"ruleId":"164","severity":1,"message":"195","line":38,"column":11,"nodeType":"166","messageId":"167","endLine":38,"endColumn":18},{"ruleId":"164","severity":1,"message":"197","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":9},{"ruleId":"164","severity":1,"message":"198","line":10,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":14},{"ruleId":"164","severity":1,"message":"199","line":12,"column":3,"nodeType":"166","messageId":"167","endLine":12,"endColumn":10},{"ruleId":"164","severity":1,"message":"200","line":49,"column":9,"nodeType":"166","messageId":"167","endLine":49,"endColumn":20},{"ruleId":"164","severity":1,"message":"194","line":11,"column":5,"nodeType":"166","messageId":"167","endLine":11,"endColumn":11},{"ruleId":"164","severity":1,"message":"195","line":39,"column":11,"nodeType":"166","messageId":"167","endLine":39,"endColumn":18},{"ruleId":"173","severity":1,"message":"174","line":44,"column":79,"nodeType":"175","endLine":44,"endColumn":95},{"ruleId":"164","severity":1,"message":"201","line":65,"column":24,"nodeType":"166","messageId":"167","endLine":65,"endColumn":39},{"ruleId":"164","severity":1,"message":"202","line":66,"column":20,"nodeType":"166","messageId":"167","endLine":66,"endColumn":31},{"ruleId":"164","severity":1,"message":"203","line":67,"column":22,"nodeType":"166","messageId":"167","endLine":67,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":105,"column":6,"nodeType":"184","endLine":105,"endColumn":18,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"174","line":109,"column":79,"nodeType":"175","endLine":109,"endColumn":95},{"ruleId":"164","severity":1,"message":"205","line":37,"column":11,"nodeType":"166","messageId":"167","endLine":37,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":2,"column":21,"nodeType":"166","messageId":"167","endLine":2,"endColumn":31},{"ruleId":"164","severity":1,"message":"206","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":12},{"ruleId":"164","severity":1,"message":"207","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":18},{"ruleId":"164","severity":1,"message":"208","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":163,"column":24,"nodeType":"211","messageId":"212","endLine":163,"endColumn":26},{"ruleId":"182","severity":1,"message":"213","line":186,"column":6,"nodeType":"184","endLine":186,"endColumn":78,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":204,"column":25,"nodeType":"217","messageId":"212","endLine":204,"endColumn":40},{"ruleId":"215","severity":1,"message":"216","line":231,"column":25,"nodeType":"217","messageId":"212","endLine":231,"endColumn":40},{"ruleId":"215","severity":1,"message":"216","line":257,"column":25,"nodeType":"217","messageId":"212","endLine":257,"endColumn":40},{"ruleId":"215","severity":1,"message":"216","line":283,"column":25,"nodeType":"217","messageId":"212","endLine":283,"endColumn":40},{"ruleId":"176","severity":1,"message":"177","line":307,"column":17,"nodeType":"178","endLine":307,"endColumn":131},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'mobileMoreAnchorEl' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'queryParameters' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ID' and 'fiction'. Either include them or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["221"],"'useHistory' is defined but never used.","'Link' is defined but never used.","'useTheme' is defined but never used.","'setChapterList' is assigned a value but never used.","'PhoneIcon' is defined but never used.","'Doughnut' is defined but never used.","'colors' is defined but never used.","'options' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'handleClick' is assigned a value but never used.","'setListFontSize' is assigned a value but never used.","'setListFont' is assigned a value but never used.","'setListIndent' is assigned a value but never used.",["222"],"'handleChange' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'chosenSortID'. Either include it or remove the dependency array.",["223"],"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [ID, fiction]",{"range":"232","text":"233"},"Update the dependencies array to be: [values]",{"range":"234","text":"235"},"Update the dependencies array to be: [ID, fiction, setFiction]",{"range":"236","text":"237"},"Update the dependencies array to be: [input, page, chosenCatID, chosenYearID, chosenStatusID, setTotalNovels, chosenSortID]",{"range":"238","text":"239"},[7179,7181],"[ID, fiction]",[4220,4222],"[values]",[2760,2772],"[ID, fiction, setFiction]",[4711,4783],"[input, page, chosenCatID, chosenYearID, chosenStatusID, setTotalNovels, chosenSortID]"]