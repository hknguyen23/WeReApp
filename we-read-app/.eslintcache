[{"D:\\Github\\WeReApp\\we-read-app\\src\\index.js":"1","D:\\Github\\WeReApp\\we-read-app\\src\\App.js":"2","D:\\Github\\WeReApp\\we-read-app\\src\\components\\home\\home.js":"3","D:\\Github\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js":"4"},{"size":183,"mtime":1608730772288,"results":"5","hashOfConfig":"6"},{"size":183,"mtime":1608731035198,"results":"7","hashOfConfig":"6"},{"size":29466,"mtime":1608918462256,"results":"8","hashOfConfig":"6"},{"size":4731,"mtime":1608826858393,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"16nb1l4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"D:\\Github\\WeReApp\\we-read-app\\src\\index.js",[],["20","21"],"D:\\Github\\WeReApp\\we-read-app\\src\\App.js",[],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\home\\home.js",["22","23","24","25","26"],"D:\\Github\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js",["27","28"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '../../resources/images/portrait.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.grow} >\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#2196F3\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            style={{ marginRight: '-5px' }}\r\n          >\r\n            <LibraryBooksIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h5\" noWrap style={{ fontWeight: \"bold\" }}>\r\n            WeRe\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Tìm kiếm…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={'primary-search-account-menu'}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              {/* <AccountCircle /> */}\r\n              <img width={\"40\"} height={\"40px\"} src={Avatar} style={{ borderRadius: \"50%\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={'primary-search-account-menu'}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":14},{"ruleId":"37","severity":1,"message":"38","line":412,"column":6,"nodeType":"39","endLine":412,"endColumn":36,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":419,"column":6,"nodeType":"39","endLine":419,"endColumn":19,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":479,"column":29,"nodeType":"45","endLine":479,"endColumn":162},{"ruleId":"43","severity":1,"message":"44","line":494,"column":29,"nodeType":"45","endLine":494,"endColumn":162},{"ruleId":"33","severity":1,"message":"46","line":81,"column":10,"nodeType":"35","messageId":"36","endLine":81,"endColumn":28},{"ruleId":"43","severity":1,"message":"44","line":140,"column":15,"nodeType":"45","endLine":140,"endColumn":96},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'novels'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook React.useEffect has missing dependencies: 'allTime', 'topMonth', and 'topWeek'. Either include them or remove the dependency array.",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mobileMoreAnchorEl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [chosenCategory, novels, sortStrategy]",{"range":"55","text":"56"},"Update the dependencies array to be: [allTime, topMonth, topStrategy, topWeek]",{"range":"57","text":"58"},[14645,14675],"[chosenCategory, novels, sortStrategy]",[14869,14882],"[allTime, topMonth, topStrategy, topWeek]"]