[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\stickyFooter\\StickyFooter.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\searching\\searching.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js":"20","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js":"21","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js":"22","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js":"23","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\resources\\data\\data.js":"24"},{"size":183,"mtime":1608628839843,"results":"25","hashOfConfig":"26"},{"size":2048,"mtime":1611307475015,"results":"27","hashOfConfig":"26"},{"size":484,"mtime":1609001680439,"results":"28","hashOfConfig":"26"},{"size":20913,"mtime":1611314021870,"results":"29","hashOfConfig":"26"},{"size":3721,"mtime":1611311195885,"results":"30","hashOfConfig":"26"},{"size":2150,"mtime":1609040685236,"results":"31","hashOfConfig":"26"},{"size":6148,"mtime":1611072963428,"results":"32","hashOfConfig":"26"},{"size":16555,"mtime":1611252336667,"results":"33","hashOfConfig":"26"},{"size":5869,"mtime":1611252336675,"results":"34","hashOfConfig":"26"},{"size":16558,"mtime":1611314561918,"results":"35","hashOfConfig":"26"},{"size":18568,"mtime":1611252336692,"results":"36","hashOfConfig":"26"},{"size":652,"mtime":1609042210264,"results":"37","hashOfConfig":"26"},{"size":6760,"mtime":1611314681046,"results":"38","hashOfConfig":"26"},{"size":5292,"mtime":1611311248615,"results":"39","hashOfConfig":"26"},{"size":4252,"mtime":1611310364083,"results":"40","hashOfConfig":"26"},{"size":574,"mtime":1609001675361,"results":"41","hashOfConfig":"26"},{"size":2927,"mtime":1611310401621,"results":"42","hashOfConfig":"26"},{"size":2516,"mtime":1610073761392,"results":"43","hashOfConfig":"26"},{"size":4493,"mtime":1610073761372,"results":"44","hashOfConfig":"26"},{"size":2455,"mtime":1610073761406,"results":"45","hashOfConfig":"26"},{"size":2637,"mtime":1610073761379,"results":"46","hashOfConfig":"26"},{"size":2557,"mtime":1611113377597,"results":"47","hashOfConfig":"26"},{"size":2788,"mtime":1611252336682,"results":"48","hashOfConfig":"26"},{"size":22309,"mtime":1611313232947,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1208h51",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js",[],["113","114"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js",["115","116","117","118","119"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js",["120","121","122"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './globalStyles';\r\nimport { lightTheme, darkTheme } from '../../constants/config.json';\r\n\r\nimport ReadingPanel from './ReadingPanel';\r\nimport InfoPanel from './InfoPanel';\r\nimport Toolbar from './Toolbar';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    width: '90%',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: '24px',\r\n    paddingTop: '24px',\r\n  }),\r\n  card: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    border: theme.fieldBorder,\r\n  }),\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    padding: '5px 0px',\r\n    backgroundColor: theme.body,\r\n  }),\r\n  divider: (theme) => ({\r\n    border: theme.fieldBorder\r\n  })\r\n}));\r\n\r\nconst Reading = () => {\r\n  const [font, setFont] = useState(\"Arial\");\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [indent, setIndent] = useState('90%');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const ID = +useParams().fictionID;\r\n  const chapterID = useParams().chapterID;\r\n  const classes = useStyles(isDarkMode ? darkTheme : lightTheme);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [])\r\n\r\n  const myRef = useRef(null)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n        <GlobalStyles />\r\n      </ThemeProvider>\r\n\r\n      <Container className={classes.root} maxWidth=\"false\">\r\n        <Card className={classes.card}>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đọc truyện\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <InfoPanel theme={isDarkMode ? darkTheme : lightTheme} ID={ID} />\r\n            <Divider className={classes.divider} />\r\n            <Toolbar\r\n              refProp={myRef}\r\n              font={font} setFont={(i) => setFont(i)}\r\n              fontSize={fontSize} setFontSize={(i) => setFontSize(i)}\r\n              indent={indent} setIndent={(i) => setIndent(i)}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n              isDarkMode={isDarkMode}\r\n              setIsDarkMode={setIsDarkMode}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel\r\n              chapterID={chapterID}\r\n              ID={ID}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ReadingPanel\r\n              font={font}\r\n              fontSize={fontSize}\r\n              indent={indent}\r\n              chapterID={chapterID}\r\n              theme={isDarkMode ? darkTheme : lightTheme}\r\n            />\r\n            <Divider className={classes.divider} />\r\n            <ControlPanel\r\n              refProp={myRef}\r\n              chapterID={chapterID}\r\n              ID={ID}\r\n              theme={isDarkMode ? darkTheme : lightTheme} />\r\n            <Divider className={classes.divider} />\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Reading;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js",["123","124","125"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Container,\r\n    Grid,\r\n    makeStyles,\r\n    Button, Box\r\n} from '@material-ui/core';\r\nimport AnalystCard from \"./AnalystCard\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\nimport ManagementCard from \"./ManagementCard\";\r\nimport SettingCard from \"./SettingCard\";\r\nimport Infor from \"./Infor\";\r\nimport AddNovel from \"./AddNovel\";\r\n\r\nfunction Profile() {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Grid>\r\n                <Infor />\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"  justify=\"center\"  alignItems=\"center\"\r\n            >\r\n                <Grid\r\n                    item\r\n                >\r\n                    <Button\r\n                        size=\"large\"\r\n                    >\r\n                        <FavoriteCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\">\r\n                        <AnalystCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\"\r\n                            onClick={() => { history.push(\"/Uploading\"); }}\r\n                    >\r\n                        <AddNovel />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\"\r\n                    >\r\n                        <ManagementCard />\r\n                    </Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n\r\n                >\r\n                    <Button size=\"large\">\r\n                        <SettingCard />\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\stickyFooter\\StickyFooter.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js",["126"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { category, novels, topMonth, topWeek, allTime, imgURL } from '../../resources/data/data'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    // height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardContent: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    flexGrow: 0,\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n    marginBottom: '-20px'\r\n  },\r\n  fab: {\r\n    width: '35%',\r\n    height: '35%',\r\n    fontSize: '50px',\r\n  },\r\n  tagContent: {\r\n    marginBottom: '10px',\r\n    textAlign: 'left',\r\n    display: 'block',\r\n    width: '100%',\r\n    padding: '10px',\r\n    backgroundColor: '#C4C4C4'\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    textAlign: 'right',\r\n    width: '70%',\r\n    marginRight: '5px'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '25%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    left: 5,\r\n    top: 5,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [chosenCategory, setChosenCategory] = React.useState(1);\r\n  const [sortStrategy, setSortStrategy] = React.useState(0);\r\n  const [topStrategy, setTopStrategy] = React.useState(0);\r\n  const [novelByCat, setNovelByCat] = React.useState(novels.filter(novel => novel.catId.includes(chosenCategory)).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt));\r\n  const [displayedNovels, setDisplayNovels] = React.useState([]);\r\n  const [displayedTop, setDisplayedTop] = React.useState(topMonth);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleChangeCategory = (id) => {\r\n    setChosenCategory(id);\r\n    setPage(1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (sortStrategy === 0)\r\n      setNovelByCat(novels.filter(novel => novel.catId.includes(chosenCategory)).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt))\r\n    else\r\n      setNovelByCat(novels.filter(novel => novel.catId.includes(chosenCategory)).sort((novel1, novel2) => novel2.rating - novel1.rating));\r\n\r\n  }, [chosenCategory, sortStrategy])\r\n\r\n  React.useEffect(() => {\r\n    if (topStrategy === 0)\r\n      setDisplayedTop(topMonth);\r\n    else if (topStrategy === 1) setDisplayedTop(topWeek);\r\n    else setDisplayedTop(allTime);\r\n  }, [topStrategy]);\r\n\r\n  React.useEffect(() => {\r\n\r\n    const start = (page - 1) * 12;\r\n    const end = start + 12 - 1;\r\n    const paginatedNovels = novelByCat.filter((item, index) => index >= start && index <= end);\r\n    setDisplayNovels(paginatedNovels);\r\n\r\n  }, [page, novelByCat])\r\n  // main unit\r\n  return (\r\n    <>\r\n      <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12} md={2}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title={<b>THỂ LOẠI</b>} style={{ color: \"#FF781F\" }} className={classes.cardHeader} />\r\n              <CardContent className={classes.cardContent}>\r\n                {\r\n                  category.map((item) => (\r\n                    (\r\n                      chosenCategory === item.id ?\r\n                        <Button key={item.id} style={{ textAlign: \"left\", width: \"100%\", marginBottom: \"10px\", borderRadius: '0', backgroundImage: 'linear-gradient(to right, #c1c1c1 0%, #c1c1c1 95%, #FF781F 95%, #FF781F 100%)' }} >\r\n                          <span style={{ width: \"86%\", fontWeight: \"bold\" }}>\r\n                            {item.name}\r\n                          </span>\r\n                          <span style={{ width: \"14%\" }}>\r\n                            <DoubleArrowIcon />\r\n                          </span>\r\n                        </Button>\r\n                        :\r\n                        <Button className={classes.tagContent} key={item.id} style={{ borderRadius: '0', backgroundColor: '#E1E1E1' }}\r\n                          onClick={() => handleChangeCategory(item.id)}\r\n                        >\r\n                          <b>{item.name}</b>\r\n                        </Button>\r\n                    )\r\n                  ))\r\n                }\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} md={6}>\r\n            <div style={{ marginBottom: '15px' }}>\r\n              <SimpleFilter sortStrategy={sortStrategy} setSortStrategy={setSortStrategy} />\r\n            </div>\r\n            <div>\r\n              <Grid container spacing={4}>\r\n                {\r\n                  novelByCat.length === 0 ?\r\n                    <Typography>Chưa có mẫu truyện thuộc thể loại này. Xin hãy quay lại sau.</Typography>\r\n                    // mới nhất\r\n                    :\r\n                    // (\r\n                    //   sortStrategy === 0 ?\r\n                    displayedNovels.map((novel, index) => (\r\n                      <Grid item xs={4} sm={3} md={3} key={index}>\r\n                        <Link to={`/Detail/${novel.id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                          <img src={imgURL[novel.id % imgURL.length]} width=\"100%\" height=\"180px\" style={{ borderRadius: '8px' }}></img>\r\n                        </Link>\r\n\r\n                        <div >\r\n                          <Typography title={novel.name} style={{\r\n                            width: \"100%\", display: 'inline-block',\r\n                            whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                          }}>\r\n                            <Link to={`/Detail/${novel.id}`} style={{ color: 'black' }}>{novel.name}</Link>\r\n                          </Typography>\r\n                        </div>\r\n                      </Grid>\r\n                    ))\r\n                  // :\r\n                  // //nổi bật nhất\r\n                  // displayedNovels.map((novel, index) => (\r\n                  //   <Grid item xs={12} sm={4} md={4} key={index}>\r\n                  //     <img src={imgURL[Math.floor(Math.random() * Math.floor(imgURL.length))]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n                  //     <div >\r\n                  //       <Typography style={{\r\n                  //         width: \"100%\", display: 'inline-block',\r\n                  //         whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                  //       }}><a href=\"/path\" style={{ color: 'black' }}>{novel.name}</a></Typography>\r\n                  //     </div>\r\n                  //   </Grid>\r\n                  // ))\r\n                  // )\r\n                }\r\n              </Grid>\r\n            </div>\r\n            {\r\n              novelByCat.length !== 0 ?\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <PaginationRounded\r\n                    count={Math.ceil(novelByCat.length / 12)}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    page={page}\r\n                    setPage={setPage} />\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <TopFilter topStrategy={topStrategy} setTopStrategy={setTopStrategy} />\r\n            <div style={{ backgroundColor: '#E1E1E1', paddingTop: \"8px\" }}>\r\n              {\r\n                displayedTop.map((novel, index) => (\r\n                  <div key={index} style={{ backgroundColor: \"#c4c4c4\", borderRadius: \"8px\", marginTop: '5px', marginBottom: '5px', padding: \"10px\" }}>\r\n                    <div className={classes.container} >\r\n                      <div className={classes.floatLeft}>\r\n                        <StyledBadge badgeContent={index <= 2 ? index + 1 : null} color={index === 0 ? \"secondary\" : index === 1 ? \"error\" : \"primary\"}\r\n                          anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                          }}\r\n                          style={{ marginTop: \"10px\" }}\r\n                        >\r\n                          <Link to={`/Detail/${novel.id}`} >\r\n                            <img src={novel.img} alt={\"Novel avatar\"} width=\"100%\" height=\"130px\" style={{ borderRadius: \"8px\" }} />\r\n                          </Link>\r\n                        </StyledBadge>\r\n                      </div>\r\n                      <div className={classes.floatRight}>\r\n                        <Link to={`/Detail/${novel.id}`} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                          <Typography style={{ fontSize: \"25px\", fontWeight: \"bold\", textAlign: \"center\" }}>{novel.name}</Typography>\r\n                        </Link>\r\n                        <div title={novel.desc} style={{\r\n                          textAlign: \"justify\",\r\n                          overflow: \"hidden\",\r\n                          maxHeight: \"5.4em\",\r\n                          lineHeight: \"1.8em\",\r\n                          position: \"relative\",\r\n                          maxWidth: \"100%\",\r\n                        }}>\r\n                          {novel.desc}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ textAlign: \"left\" }}>\r\n                      {\r\n                        [1, 2, 3, 4, 5].map((item, index) => (\r\n                          item <= novel.rating ?\r\n                            <StarIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                            :\r\n                            <StarBorderIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                      <span>\r\n                        Tác giả: {novel.author}\r\n                      </span>\r\n                      <span>\r\n                        Ngày đăng: {novel.date}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container >\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles_1 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  'Mới nhất',\r\n  'Nổi bật',\r\n];\r\n\r\nfunction SimpleFilter({ sortStrategy, setSortStrategy }) {\r\n  const classes = useStyles_1();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSortStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#c1c1c1\", width: \"12vw\", borderRadius: \"8px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'black' }}\r\n        >\r\n          <ListItemText primary={options[sortStrategy]} />\r\n          < ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === sortStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles_2 = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#0057B2',\r\n      color: 'white',\r\n    },\r\n    // \"& .MuiPaginationItem\": {\r\n    //   backgroundColor: \"yellow\"\r\n    // },\r\n    // '& .page-item': {\r\n    //   backgroundColor: '#E0E0E0'\r\n    // }\r\n  },\r\n}));\r\n\r\nfunction PaginationRounded({ count, page, setPage }) {\r\n  const classes = useStyles_2();\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={count} page={page} shape=\"rounded\" color=\"primary\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst topOptions = [\r\n  \"TOP Tháng\",\r\n  \"TOP Năm\",\r\n  \"Mọi thời đại\"\r\n];\r\n\r\nconst useStyles_3 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n}));\r\n\r\nfunction TopFilter({ topStrategy, setTopStrategy }) {\r\n  const classes = useStyles_3();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setTopStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#FF781F\", borderRadius: \"0px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'white' }}\r\n        >\r\n          <ListItemText style={{ textAlign: 'center' }} primary={topOptions[topStrategy]} />\r\n          <ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {topOptions.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === topStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div >\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js",["127","128","129","130","131","132","133","134"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink, useHistory, Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '../../resources/images/portrait.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    // justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    // paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    // transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    // [theme.breakpoints.up('md')]: {\r\n    //   width: '20ch',\r\n    // },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [input, setInput] = React.useState(\"\");\r\n  const history = useHistory();\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleToHome = () => {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const handleToProfile = () => {\r\n    history.push(\"/Profile\");\r\n\r\n  }\r\n\r\n  const handleEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      history.push(`/Searching/${input} `);\r\n    }\r\n\r\n  }\r\n\r\n  const queryParameters = {\r\n    fictionName: input\r\n  }\r\n  // const handleToSearchPage = () => {\r\n  //   const queryParameters = {\r\n  //     fictionName: input\r\n  //   }\r\n  //   history.push(`/Searching/${input}`)\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.grow} >\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#2196F3\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            style={{ marginRight: '-5px' }}\r\n            onClick={handleToHome}\r\n          >\r\n            <LibraryBooksIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <NavLink to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n            <Typography className={classes.title} variant=\"h5\" noWrap style={{ fontWeight: \"bold\" }}>\r\n              WeRe\r\n          </Typography>\r\n          </NavLink>\r\n          <div className={classes.grow} />\r\n          <div className={classes.search} >\r\n            <Link className={classes.searchIcon} style={{ cursor: 'pointer', color: 'white' }}\r\n              to={`/Searching/${input} `}>\r\n              <SearchIcon />\r\n            </Link>\r\n            <InputBase\r\n              placeholder=\"Tìm kiếm...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              value={input}\r\n              fullWidth\r\n              onKeyPress={handleEnter}\r\n            />\r\n          </div>\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={'primary-search-account-menu'}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n              onClick={handleToProfile}\r\n            >\r\n              {/* <AccountCircle /> */}\r\n              <img width={\"40\"} height={\"40px\"} src={Avatar} style={{ borderRadius: \"50%\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={'primary-search-account-menu'}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n        onClick={handleToProfile}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      </Menu> */}\r\n    </div >\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js",["135","136","137","138","139","140","141"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\searching\\searching.js",["142","143","144","145","146","147","148","149","150"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport * as data from '../../resources/data/data';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    width: '95%',\r\n    margin: 'auto'\r\n  },\r\n  cardContent: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    flexGrow: 0,\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n}));\r\n\r\nconst catOption =\r\n{\r\n  name: 'Thể loại',\r\n  values: [{ id: 0, name: \"Tất cả\" }].concat(data.category.slice())\r\n}\r\nconst tagOption =\r\n{\r\n  name: 'Tag',\r\n  values: [{ id: 0, name: \"Tất cả\" }].concat(data.tags.slice())\r\n}\r\n\r\nconst yearOption =\r\n{\r\n  name: 'Năm',\r\n  values: [\r\n    {\r\n      id: 0,\r\n      name: \"Tất cả\"\r\n    }, {\r\n      id: 1,\r\n      name: 2021\r\n    }, {\r\n      id: 2,\r\n      name: 2020\r\n    }, {\r\n      id: 3,\r\n      name: 2019\r\n    }, {\r\n      id: 4,\r\n      name: 2018\r\n    }, {\r\n      id: 5,\r\n      name: 2017\r\n    }, {\r\n      id: 6,\r\n      name: 2016\r\n    }, {\r\n      id: 7,\r\n      name: 2015\r\n    }, {\r\n      id: 8,\r\n      name: 2014\r\n    }, {\r\n      id: 9,\r\n      name: 2013\r\n    }, {\r\n      id: 10,\r\n      name: 2012\r\n    }, {\r\n      id: 11,\r\n      name: 2011\r\n    }, {\r\n      id: 12,\r\n      name: \"Trước 2011\"\r\n    }\r\n  ]\r\n}\r\nconst statusOption =\r\n{\r\n  name: \"Trạng thái\",\r\n  values: [\r\n    {\r\n      id: 0,\r\n      name: \"Tất cả\"\r\n    }, {\r\n      id: 1,\r\n      name: \"Đang cập nhật\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Đã hoàn thành\"\r\n    }\r\n  ]\r\n}\r\nconst sortOption = {\r\n  name: \"Sắp xếp\",\r\n  values: [\r\n    {\r\n      id: 1,\r\n      name: \"Xem nhiều nhất\"\r\n    }, {\r\n      id: 2,\r\n      name: \"Đánh giá cao nhất\"\r\n    }\r\n    // , {\r\n    //   id: 3,\r\n    //   name: \"Đánh giá cao nhất năm\"\r\n    // },\r\n    // {\r\n    //   id: 4,\r\n    //   name: \"Đánh giá cao mọi thời dại\"\r\n    // }\r\n  ]\r\n}\r\n\r\nconst itemsperPage = 12;\r\nfunction Searching() {\r\n  const classes = useStyles();\r\n  const [input, setInput] = useState(useParams().fictionName + \" \");\r\n  const [chosenCatID, setChosenCatID] = useState([0]);\r\n  const [chosenTagID, setChosenTagID] = useState([0]);\r\n  const [chosenYearID, setChosenYearID] = useState(0);\r\n  const [chosenStatusID, setChosenStatusID] = useState(0);\r\n  const [chosenSortID, setChosenSortID] = useState(1);\r\n  const [resultNum, setResultNum] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [totalNovels, setTotalNovels] = useState(0);\r\n  const [displayedNovels, setDisplayNovels] = useState([]);\r\n  const [values, setValues] = useState(input);\r\n\r\n  const handleChange = (event) => {\r\n    setValues(event.target.value);\r\n  };\r\n\r\n  const handleClickClearInput = () => {\r\n    setValues(\"\");\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    setInput(values);\r\n  };\r\n\r\n\r\n  const handleChangeCat = (i) => {\r\n    let newArr = [0];\r\n    if (i === 0 && !chosenCatID.includes(0)) {              // if select all, deselect all other genre\r\n      newArr = [0];\r\n    }\r\n    else {\r\n      const index = chosenCatID.indexOf(i);                // add or remove genre\r\n      if (index > -1) {                                           // remove genre\r\n        newArr = chosenCatID.filter(id => id !== i);\r\n      }\r\n      else {                                                      // add genre                      \r\n        newArr = [\r\n          ...chosenCatID,\r\n          i,\r\n        ];\r\n      }\r\n\r\n      if (newArr.length === 0) {                                // if List genre is empty, add all\r\n        newArr.push(0);\r\n      }\r\n      if (newArr.length > 1 && newArr.includes(0)) {            // if List genre has 2 or more genre and includes all, remove all\r\n        newArr = newArr.filter(id => id !== 0);\r\n      }\r\n    }\r\n    setChosenCatID(newArr);\r\n  }\r\n  const handleChangeTag = (i) => {\r\n    let newArr = [0];\r\n    if (i === 0 && !chosenTagID.includes(0)) {              // if select all, deselect all other tag\r\n      newArr = [0];\r\n    }\r\n    else {\r\n      const index = chosenTagID.indexOf(i);                // add or remove tag\r\n      if (index > -1) {                                           // remove tag\r\n        newArr = chosenTagID.filter(id => id !== i);\r\n      }\r\n      else {                                                      // add tag                      \r\n        newArr = [\r\n          ...chosenTagID,\r\n          i,\r\n        ];\r\n      }\r\n\r\n      if (newArr.length === 0) {                                // if List tag is empty, add all\r\n        newArr.push(0);\r\n      }\r\n      if (newArr.length > 1 && newArr.includes(0)) {            // if List tag has 2 or more tag and includes all, remove all\r\n        newArr = newArr.filter(id => id !== 0);\r\n      }\r\n    }\r\n    setChosenTagID(newArr);\r\n  }\r\n\r\n  const handleChangeYear = (i) => {\r\n    setChosenYearID(i)\r\n  }\r\n\r\n  const handleChangeStatus = (i) => {\r\n    setChosenStatusID(i)\r\n  }\r\n\r\n  const handleChangeSort = (i) => {\r\n    setChosenSortID(i)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const start = (page - 1) * itemsperPage;\r\n    const end = start + itemsperPage - 1;\r\n    let novels = JSON.parse(JSON.stringify(data.novels));\r\n\r\n    console.log(novels)\r\n    if (!chosenCatID.includes(0))\r\n      novels = novels.filter(novel => chosenCatID.every(id => novel.catId.includes(id)));\r\n    if (!chosenTagID.includes(0)) {\r\n      novels = novels.filter(novel => chosenTagID.every(id => novel.tagId.includes(id)));\r\n    }\r\n    if (chosenYearID !== 0) {\r\n      if (chosenYearID !== 12)\r\n        novels = novels.filter(novel => novel.year === yearOption.values[chosenYearID].name);\r\n      else\r\n        novels = novels.filter(novel => novel.year < 2010);\r\n    }\r\n    if (chosenStatusID != 0)\r\n      novels = novels.filter(novel => novel.status === statusOption.values[chosenStatusID].id);\r\n\r\n    if (chosenSortID === 1) {\r\n      novels = novels.sort((novel1, novel2) => novel2.view - novel1.view);\r\n    } else if (chosenSortID === 2) {\r\n      novels = novels.sort((novel1, novel2) => novel2.rating - novel1.rating);\r\n    }\r\n\r\n\r\n    if (input === \"undefined \" || input.trim() === \"\") {\r\n      setResultNum(\"\");\r\n      const paginatedNovels = novels.filter((item, index) => index >= start && index <= end);\r\n      setTotalNovels(novels.length);\r\n      setDisplayNovels(paginatedNovels);\r\n    } else {\r\n      const novelsByName = novels.filter(novel => novel.name.toLowerCase().includes(input.trim().toLowerCase()));\r\n      const paginatedNovels = novelsByName.filter((item, index) => index >= start && index <= end);\r\n\r\n      setTotalNovels(novelsByName.length);\r\n      setDisplayNovels(paginatedNovels);\r\n      setResultNum(`${novelsByName.length} Kết quả tìm kiếm \"${input.trim()}\"`);\r\n    }\r\n  }, [input, page, chosenCatID, chosenTagID, chosenYearID, chosenStatusID, setTotalNovels]);\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n\r\n      <div style={{ backgroundColor: '#f3f3f3', textAlign: 'center', borderRadius: '18px', padding: '20px' }}>\r\n\r\n        {<Grid container >\r\n          <Grid item xs={12} sm={2} md={1} lg={1}></Grid>\r\n          <Grid item xs={12} sm={10} md={11} lg={11} >\r\n            <div style={{ textAlign: 'left' }}>\r\n              <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" style={{ marginLeft: '20px', marginTop: '20px', marginBottom: '7px', width: '45%' }}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Tên truyện</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={'text'}\r\n                  label={'Tên truyện'}\r\n                  value={values.trim()}\r\n                  onChange={(e) => handleChange(e)}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickClearInput}\r\n                        edge=\"end\"\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <IconButton style={{ marginTop: '25px' }} onClick={handleSearch}><SearchIcon /></IconButton>\r\n            </div>\r\n\r\n          </Grid>\r\n\r\n        </Grid>}\r\n\r\n\r\n        {\r\n          <Grid container style={{ marginTop: '7px', marginBottom: '7px' }}>\r\n            <Grid item xs={12} sm={2} md={1} lg={1}>\r\n              <Typography style={{ textAlign: 'right', marginTop: '7px' }}>{catOption.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10} md={11} lg={11}>\r\n              <div style={{ textAlign: 'justify', marginLeft: '20px' }}>\r\n                {\r\n                  catOption.values.map((value, index) => (\r\n                    <button key={index}\r\n                      style={{\r\n                        margin: '5px', backgroundColor: '#e0e0e0', borderRadius: '8px', border: '0px', outline: 'none', cursor: 'pointer',\r\n                        padding: '6px 16px 6px', boxShadow: '0 4px 4px 0px rgba(0, 0, 0, 0.2), 0 4px 4px 0 rgba(0, 0, 0, 0.19)',\r\n                        backgroundColor: chosenCatID.includes(value.id) ? '#2F80ED' : '#E0E0E0',\r\n                        color: chosenCatID.includes(value.id) ? 'white' : 'black'\r\n                      }}\r\n                      onClick={() => handleChangeCat(value.id)}\r\n                    >\r\n                      {value.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        {\r\n          <Grid container style={{ marginTop: '7px', marginBottom: '7px' }}>\r\n            <Grid item xs={12} sm={2} md={1} lg={1}>\r\n              <Typography style={{ textAlign: 'right', marginTop: '7px' }}>{tagOption.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10} md={11} lg={11}>\r\n              <div style={{ textAlign: 'justify', marginLeft: '20px' }}>\r\n                {\r\n                  tagOption.values.map((value, index) => (\r\n                    <button key={index}\r\n                      style={{\r\n                        margin: '5px', backgroundColor: '#e0e0e0', borderRadius: '8px', border: '0px', outline: 'none', cursor: 'pointer',\r\n                        padding: '6px 16px 6px', boxShadow: '0 4px 4px 0px rgba(0, 0, 0, 0.2), 0 4px 4px 0 rgba(0, 0, 0, 0.19)',\r\n                        backgroundColor: chosenTagID.includes(value.id) ? '#2F80ED' : '#E0E0E0',\r\n                        color: chosenTagID.includes(value.id) ? 'white' : 'black'\r\n                      }}\r\n                      onClick={() => handleChangeTag(value.id)}\r\n                    >\r\n                      {value.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        {/* {\r\n          <Grid container style={{ marginTop: '7px', marginBottom: '7px' }}>\r\n            <Grid item xs={12} sm={2} md={1} lg={1}>\r\n              <Typography style={{ textAlign: 'right', marginTop: '7px' }}>{yearOption.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10} md={11} lg={11}>\r\n              <div style={{ textAlign: 'justify', marginLeft: '20px' }}>\r\n                {\r\n                  yearOption.values.map((value, index) => (\r\n                    <button key={index}\r\n                      style={{\r\n                        margin: '5px', backgroundColor: '#e0e0e0', borderRadius: '8px', border: '0px', outline: 'none', cursor: 'pointer',\r\n                        padding: '6px 16px 6px', boxShadow: '0 4px 4px 0px rgba(0, 0, 0, 0.2), 0 4px 4px 0 rgba(0, 0, 0, 0.19)',\r\n                        backgroundColor: chosenYearID === value.id ? '#2F80ED' : '#E0E0E0',\r\n                        color: chosenYearID === value.id ? 'white' : 'black'\r\n                      }}\r\n                      onClick={() => handleChangeYear(value.id)}\r\n                    >\r\n                      {value.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        } */}\r\n        {\r\n          <Grid container style={{ marginTop: '7px', marginBottom: '7px' }}>\r\n            <Grid item xs={12} sm={2} md={1} lg={1}>\r\n              <Typography style={{ textAlign: 'right', marginTop: '7px' }}>{statusOption.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10} md={11} lg={11}>\r\n              <div style={{ textAlign: 'justify', marginLeft: '20px' }}>\r\n                {\r\n                  statusOption.values.map((value, index) => (\r\n                    <button key={index}\r\n                      style={{\r\n                        margin: '5px', backgroundColor: '#e0e0e0', borderRadius: '8px', border: '0px', outline: 'none', cursor: 'pointer',\r\n                        padding: '6px 16px 6px', boxShadow: '0 4px 4px 0px rgba(0, 0, 0, 0.2), 0 4px 4px 0 rgba(0, 0, 0, 0.19)',\r\n                        backgroundColor: chosenStatusID === value.id ? '#2F80ED' : '#E0E0E0',\r\n                        color: chosenStatusID === value.id ? 'white' : 'black'\r\n                      }}\r\n                      onClick={() => handleChangeStatus(value.id)}\r\n                    >\r\n                      {value.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        {\r\n          <Grid container style={{ marginTop: '7px', marginBottom: '7px' }}>\r\n            <Grid item xs={12} sm={2} md={1} lg={1}>\r\n              <Typography style={{ textAlign: 'right', marginTop: '7px' }}>{sortOption.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10} md={11} lg={11}>\r\n              <div style={{ textAlign: 'justify', marginLeft: '20px' }}>\r\n                {\r\n                  sortOption.values.map((value, index) => (\r\n                    <button key={index}\r\n                      style={{\r\n                        margin: '5px', backgroundColor: '#e0e0e0', borderRadius: '8px', border: '0px', outline: 'none', cursor: 'pointer',\r\n                        padding: '6px 16px 6px', boxShadow: '0 4px 4px 0px rgba(0, 0, 0, 0.2), 0 4px 4px 0 rgba(0, 0, 0, 0.19)',\r\n                        backgroundColor: chosenSortID === value.id ? '#2F80ED' : '#E0E0E0',\r\n                        color: chosenSortID === value.id ? 'white' : 'black'\r\n                      }}\r\n                      onClick={() => handleChangeSort(value.id)}\r\n                    >\r\n                      {value.name}\r\n                    </button>\r\n                  ))\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      </div>\r\n\r\n      <h2 style={{ width: '100%', textAlign: 'right' }}>\r\n        {resultNum}\r\n      </h2>\r\n\r\n      <div>\r\n        <Grid container spacing={4}>\r\n          {displayedNovels.map((novel, index) => (\r\n            <Grid item xs={4} sm={3} md={2} lg={2} key={index}>\r\n              <Link to={`/Detail/${novel.id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                <img src={data.imgURL[novel.id % data.imgURL.length]} width=\"100%\" height=\"200px\" style={{ borderRadius: '8px' }}></img>\r\n              </Link>\r\n\r\n              <div >\r\n                <Typography title={novel.name} style={{\r\n                  width: \"100%\", display: 'inline-block',\r\n                  whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                }}>\r\n                  <Link to={`/Detail/${novel.id}`} style={{ color: 'black' }}>{novel.name}</Link>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          ))\r\n            // :\r\n            // //nổi bật nhất\r\n            // displayedNovels.map((novel, index) => (\r\n            //   <Grid item xs={12} sm={4} md={4} key={index}>\r\n            //     <img src={imgURL[Math.floor(Math.random() * Math.floor(imgURL.length))]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n            //     <div >\r\n            //       <Typography style={{\r\n            //         width: \"100%\", display: 'inline-block',\r\n            //         whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n            //       }}><a href=\"/path\" style={{ color: 'black' }}>{novel.name}</a></Typography>\r\n            //     </div>\r\n            //   </Grid>\r\n            // ))\r\n            // )\r\n          }\r\n        </Grid>\r\n      </div>\r\n      {\r\n        displayedNovels.length !== 0 ?\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <PaginationRounded\r\n              count={Math.ceil(totalNovels / itemsperPage)}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              page={page}\r\n              setPage={setPage} />\r\n          </div>\r\n          :\r\n          <></>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Searching;\r\n\r\nconst useStyles_2 = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#0057B2',\r\n      color: 'white',\r\n    }\r\n  },\r\n}));\r\n\r\nfunction PaginationRounded({ count, page, setPage }) {\r\n  const classes = useStyles_2();\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={count} page={page} shape=\"rounded\" color=\"primary\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js",["151","152","153"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js",["154","155"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Link,\r\n  Divider,\r\n  Tooltip,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { novels, topMonth, imgURL } from '../../resources/data/data'\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport defaultImg from '../../resources/images/defaultAvatar.png';\r\nimport { detail, detailTest } from '../../resources/data/data'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: (theme) => ({\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    width: '100%',\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n    backgroundColor: theme.body\r\n  }),\r\n  rightContainer: {\r\n    float: \"right\",\r\n    display: 'flex',\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    textAlign: 'left',\r\n  },\r\n  leftContainer: {\r\n    float: \"left\",\r\n    textAlign: 'left',\r\n    marginRight: '25px',\r\n  },\r\n  divider: {\r\n    backgroundColor: 'black'\r\n  },\r\n  image: (theme) => ({\r\n    border: theme.fieldBorder === \"0px\" ? '1px solid' : theme.fieldBorder,\r\n  }),\r\n  title: (theme) => ({\r\n    fontSize: '34px',\r\n    marginRight: '24px',\r\n    color: theme.text\r\n  }),\r\n  button: {\r\n    minWidth: '45px',\r\n    height: '45px',\r\n    color: 'white',\r\n    backgroundColor: '#27ae60',\r\n    borderRadius: '8px',\r\n    marginRight: '10px',\r\n    \"&:hover\": {\r\n      backgroundColor: '#0d5e36',\r\n    }\r\n  },\r\n  author: (theme) => ({\r\n    fontSize: textSize,\r\n    color: theme.link,\r\n  }),\r\n  infoBox: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    color: theme.text\r\n  }),\r\n  description: (theme) => ({\r\n    fontSize: textSize,\r\n    wordBreak: 'break-all',\r\n    textAlign: 'justify',\r\n    color: theme.text\r\n  })\r\n\r\n}));\r\n\r\n\r\n\r\nconst textSize = '18px';\r\n\r\nconst InfoPanel = ({ theme, ID }) => {\r\n  const classes = useStyles(theme);\r\n  const histoty = useHistory();\r\n  const [fiction, setFiction] = useState(detail);\r\n\r\n  useEffect(() => {\r\n    if (ID === 1000) {\r\n      setFiction(detailTest);\r\n    }\r\n    else {\r\n      const fictionCopy = JSON.parse(JSON.stringify(fiction));\r\n      if (ID <= 25) {\r\n        fictionCopy.title = novels[ID - 1].name;\r\n        fictionCopy.imgURL = imgURL[novels[ID - 1].id % imgURL.length];\r\n      } else {\r\n        fictionCopy.title = topMonth[ID - 25 - 1].name;\r\n        fictionCopy.imgURL = topMonth[ID - 25 - 1].img;\r\n      }\r\n      setFiction(fictionCopy);\r\n    }\r\n  }, [setFiction]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"lg\" className={classes.container} maxWidth={false}>\r\n        <div className={classes.leftContainer}>\r\n          <img height={230} width={200} src={fiction.imgURL === \"none\" ? defaultImg : fiction.imgURL} alt=\"Default fiction\"\r\n            className={classes.image}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.rightContainer}>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography variant=\"h4\" className={classes.title}>{fiction.title}</Typography>\r\n            <Tooltip title=\"Bình luận\" aria-label=\"Bình luận\">\r\n              <Button className={classes.button} onClick={() => { histoty.push(`/Detail/${ID}`); }}>\r\n                <QuestionAnswerIcon style={{ width: '30px', height: '30px' }}></QuestionAnswerIcon>\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title=\"Lưu vào yêu thích\" aria-label=\"Lưu vào yêu thích\">\r\n              <Button className={classes.button} onClick={() => { histoty.push(`/Detail/${ID}`); }}>\r\n                <BookmarkIcon style={{ width: '30px', height: '30px' }}></BookmarkIcon>\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n          <Typography style={{ fontSize: textSize, display: 'flex', color: 'gray' }}>\r\n            Bởi&nbsp;\r\n              {fiction.authors.map(author =>\r\n            <Link key={author.id} className={classes.author} onClick={() => { histoty.push(\"/Profile\"); }}>\r\n              {author.name}&nbsp;\r\n              </Link>\r\n          )}\r\n          </Typography>\r\n          <br></br>\r\n          <div className={classes.infoBox}>\r\n            <Typography style={{ fontSize: textSize, width: '37%' }}>\r\n              Trạng thái:\r\n                {fiction.status === 1 ? \" Đang cập nhật\" : fiction.status === 2 ? \" Hoàn chỉnh\" : \" Bị hủy\"}\r\n            </Typography>\r\n            <Typography style={{ fontSize: textSize, width: '25%' }}>\r\n              Lượt xem: {fiction.views}\r\n            </Typography>\r\n            <Typography style={{ fontSize: textSize, width: '20%' }}>\r\n              Theo dõi: {fiction.followers}\r\n            </Typography>\r\n            <Typography style={{ fontSize: textSize, width: '18%' }}>\r\n              Bình luận: {fiction.comments.length}\r\n            </Typography>\r\n          </div>\r\n          <br></br>\r\n          <Divider></Divider>\r\n          <Typography className={classes.description} style={{ whiteSpace: 'pre-line', textAlign: 'justify', fontSize: '18px' }}>\r\n            {fiction.description}\r\n          </Typography>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment >\r\n  );\r\n}\r\n\r\nexport default InfoPanel;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js",["156","157","158"],"import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Switch,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: (theme) => ({\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.body\r\n  }),\r\n  toolbar: (theme) => ({\r\n    width: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'rows',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '14px',\r\n    fontSize: '20px',\r\n    color: theme.text\r\n  }),\r\n  marginIcon: {\r\n    marginRight: '5px'\r\n  },\r\n  marginGroup: {\r\n    marginRight: '24px'\r\n  },\r\n  fontIcon: {\r\n    width: '33px',\r\n    height: '33px',\r\n    color: '#2F80ED',\r\n  },\r\n  fontDropdown: {\r\n    width: '200px'\r\n  },\r\n  textField: (theme) => ({\r\n    backgroundColor: theme.body,\r\n    \"& .MuiInputBase-root\": {\r\n      color: theme.text,\r\n      border: theme.fieldBorder,\r\n      backgroundColor: theme.fieldBackground,\r\n      \"& option\": {\r\n        backgroundColor: theme.body,\r\n      }\r\n    },\r\n    \"& .MuiSelect-icon\": {\r\n      color: theme.text,\r\n    }\r\n  }),\r\n}));\r\n\r\nconst data1 = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28];\r\nconst data2 = ['Arial', 'Roboto', 'Cambria', 'Times New Roman'];\r\nconst data3 = ['50%', '60%', '70%', '80%', '90%'];\r\n\r\nconst Toolbar = (props) => {\r\n  const classes = useStyles(props.theme);\r\n  const [listFontSize, setListFontSize] = useState(data1);\r\n  const [listFont, setListFont] = useState(data2);\r\n  const [listIndent, setListIndent] = useState(data3);\r\n\r\n  const handleChangeFont = (e) => {\r\n    props.setFont(e.target.value);\r\n  }\r\n  const handleChangeFontSize = (e) => {\r\n    props.setFontSize(e.target.value);\r\n  }\r\n  const handleChangeIndent = (e) => {\r\n    props.setIndent(e.target.value);\r\n  }\r\n\r\n  const handleChangeTheme = () => {\r\n    if (props.isDarkMode) {\r\n      props.setIsDarkMode(false);\r\n    }\r\n    else {\r\n      props.setIsDarkMode(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container ref={props.refProp} className={classes.root} maxWidth={false}>\r\n        <Box className={classes.toolbar}>\r\n          <Typography className={classes.marginIcon}>Nền tối</Typography>\r\n          <Switch className={classes.marginGroup} onChange={handleChangeTheme}\r\n            color=\"secondary\" name=\"dark\"\r\n          />\r\n          <Tooltip title=\"Phông chữ\" aria-label=\"Phông chữ\">\r\n            <FontDownloadIcon className={`${classes.fontIcon} ${classes.marginIcon}`} />\r\n          </Tooltip>\r\n          <TextField className={`${classes.fontDropdown} ${classes.marginGroup} ${classes.textField}`}\r\n            size=\"small\" name=\"font\" required select variant=\"outlined\" value={props.font}\r\n            onChange={handleChangeFont} SelectProps={{ native: true }}\r\n          >\r\n            {listFont.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Cỡ chữ</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"fontSize\"\r\n            required select variant=\"outlined\" value={props.fontSize}\r\n            onChange={handleChangeFontSize} SelectProps={{ native: true }}\r\n          >\r\n            {listFontSize.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Typography className={classes.marginIcon}>Độ rộng</Typography>\r\n          <TextField className={`${classes.marginGroup} ${classes.textField}`} size=\"small\" name=\"indent\"\r\n            required select variant=\"outlined\" value={props.indent}\r\n            onChange={handleChangeIndent} SelectProps={{ native: true }}\r\n          >\r\n            {listIndent.map((option) => (\r\n              <option key={option} value={option} >\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js",["159"],"import React from 'react';\r\nimport {\r\n    Container,\r\n    Button,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { detail } from '../../resources/data/data'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: (theme) => ({\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingRight: '0px',\r\n        paddingLeft: '0px',\r\n        backgroundColor: theme.body\r\n    }),\r\n    button: (theme) => ({\r\n        width: '33,3%',\r\n        height: '36px',\r\n        borderRadius: '0px',\r\n        backgroundColor: theme.button,\r\n    }),\r\n    middleButton: (theme) => ({\r\n        borderLeft: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n        borderRight: theme.fieldBorder === \"0px\" ? \"1px solid #FFFFFF\" : theme.fieldBorder,\r\n    })\r\n}));\r\n\r\nconst ControlPanel = (props) => {\r\n    const classes = useStyles(props.theme);\r\n    const histoty = useHistory();\r\n\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n    const prevChapter = Number(props.chapterID) - 1;\r\n    const nextChapter = Number(props.chapterID) + 1;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container className={classes.root} maxWidth={false}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} startIcon={<ArrowBackIosIcon />}\r\n                    disabled={prevChapter <= 0}\r\n                    onClick={() => {\r\n                        histoty.push(`/Reading/${props.ID}/${prevChapter}`);\r\n                        if (props.refProp) {\r\n                            props.refProp.current.scrollIntoView()\r\n                        }\r\n                    }}\r\n                >\r\n                    Chương trước\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" className={`${classes.button} ${classes.middleButton}`}\r\n                    onClick={() => { histoty.push(`/Detail/${props.ID}`); }}\r\n\r\n                >\r\n                    Danh sách chương\r\n                </Button>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\"\r\n                    className={classes.button} endIcon={<ArrowForwardIosIcon />}\r\n                    disabled={nextChapter > detail.chapters.length}\r\n                    onClick={() => {\r\n                        histoty.push(`/Reading/${props.ID}/${nextChapter}`);\r\n                        if (props.refProp) {\r\n                            props.refProp.current.scrollIntoView()\r\n                        }\r\n                    }}\r\n                >\r\n                    Chương sau\r\n            </Button>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js",["160","161","162"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst ManagementCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"QUẢN LÝ\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AppsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN ĐÃ ĐĂNG</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nManagementCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default ManagementCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js",["163"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #fac150 30%, #fccf2b 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(197, 199, 197 .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst AnalystCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                data: [67, 33],\r\n                backgroundColor: [\r\n                    colors.indigo[500],\r\n                    colors.red[600],\r\n                ],\r\n                borderWidth: 8,\r\n                borderColor: colors.common.white,\r\n                hoverBorderColor: colors.common.white\r\n            }\r\n        ],\r\n        labels: ['Đọc', 'Viết']\r\n    };\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    const devices = [\r\n        {\r\n            title: 'Đọc',\r\n            value: 67,\r\n            icon: LaptopMacIcon,\r\n            color: colors.indigo[500]\r\n        },\r\n        {\r\n            title: 'Viết',\r\n            value: 33,\r\n            icon: TabletIcon,\r\n            color: colors.red[600]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"THỜI GIAN\" />\r\n            <Divider variant=\"middle\" />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <Doughnut\r\n                        data={data}\r\n                        options={options}\r\n                    />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    {devices.map(({\r\n                                      color,\r\n                                      icon: Icon,\r\n                                      title,\r\n                                      value\r\n                                  }) => (\r\n                        <Box\r\n                            key={title}\r\n                            p={1}\r\n                            textAlign=\"center\"\r\n                        >\r\n                            <Icon color=\"action\" />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                variant=\"body1\"\r\n                            >\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{ color }}\r\n                                variant=\"h4\"\r\n                            >\r\n                                {value}\r\n                                %\r\n                            </Typography>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAnalystCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AnalystCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js",["164","165"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #4d4d4d 30%, #a8a7a7 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst SettingCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"CÀI ĐẶT\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <SettingsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>THAY ĐỔI THÔNG SỐ</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSettingCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SettingCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js",["166","167","168"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #f2775e 30%, #f28872 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(242, 24, 39, .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n}));\r\n\r\nconst FavoriteCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px'}}\r\n        >\r\n            <CardHeader classes={{title: classes.headerTitle}} title=\"yêu thích\" />\r\n            <Divider variant=\"middle\" />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <FavoriteIcon style={{ fontSize: 100 , color: red[500]}} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    align-itmes=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN YÊU THÍCH</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFavoriteCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default FavoriteCard;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js",["169","170"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n        background: 'linear-gradient(45deg, #82f76d 30%, #53fa34 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(17, 245, 51 .3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        padding: '0 30px',\r\n    },\r\n    headerTitle: {\r\n        fontSize: \"30px\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        boxShadow: \"rgba(33, 203, 243, .3)\"\r\n    },\r\n\r\n}));\r\n\r\nconst AddNovel = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            // style={{ height: '400px', width: '300px', backgroundColor: \"#f5f5f5\"}}\r\n            style={{ height: '400px', width: '300px' }}\r\n\r\n        >\r\n            <CardHeader classes={{ title: classes.headerTitle }} title=\"TRUYỆN\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AddCircleOutlineIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>ĐĂNG TRUYỆN MỚi</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nAddNovel.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default AddNovel;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js",["171","172","173","174"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n  Chip\r\n} from '@material-ui/core';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport defaultImg from '../../resources/images/portrait.jpg';\r\n\r\nconst user = {\r\n  avatar: defaultImg,\r\n  city: 'Thành phố Hồ Chí Minh',\r\n  country: 'Việt Nam',\r\n  jobTitle: 'Author',\r\n  name: 'John Nguyen',\r\n  email: \"john23@gmail.com\",\r\n  timezone: 'GMT-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: '24px',\r\n    marginBottom: '24px'\r\n  },\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  },\r\n  chip: {\r\n    margin: '5px',\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClick = () => {\r\n    console.info('You clicked the Chip.');\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <div>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              src={user.avatar}\r\n            />\r\n          </div>\r\n          <div display=\"flex\" justifyContent=\"flex-start\">\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h3\"\r\n            >\r\n              {user.name}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"body1\"\r\n            >\r\n              {user.email}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {`${user.city} - ${user.country}`}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n            </Typography>\r\n            <Typography >\r\n              <Chip className={classes.chip} icon={<FaceIcon />} label={\"Exellent Author\"} color=\"primary\" variant=\"outlined\" />\r\n              <Chip className={classes.chip} label=\"#Basic_Reader\" />\r\n              <Chip className={classes.chip} avatar={<Avatar>M</Avatar>} label=\"Best_author\" variant=\"outlined\" />\r\n            </Typography>\r\n          </div>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\resources\\data\\data.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":24,"column":10,"nodeType":"181","messageId":"182","endLine":24,"endColumn":21},{"ruleId":"179","severity":1,"message":"183","line":28,"column":8,"nodeType":"181","messageId":"182","endLine":28,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":204,"column":6,"nodeType":"186","endLine":204,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":347,"column":63,"nodeType":"190","messageId":"191","endLine":347,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":351,"column":60,"nodeType":"190","messageId":"191","endLine":351,"endColumn":62},{"ruleId":"179","severity":1,"message":"192","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":20},{"ruleId":"179","severity":1,"message":"193","line":2,"column":33,"nodeType":"181","messageId":"182","endLine":2,"endColumn":37},{"ruleId":"179","severity":1,"message":"194","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":11},{"ruleId":"179","severity":1,"message":"195","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"196","line":6,"column":5,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"197","line":7,"column":13,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":185,"column":27,"nodeType":"200","endLine":185,"endColumn":131},{"ruleId":"179","severity":1,"message":"201","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":16},{"ruleId":"179","severity":1,"message":"202","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":12},{"ruleId":"179","severity":1,"message":"203","line":83,"column":10,"nodeType":"181","messageId":"182","endLine":83,"endColumn":28},{"ruleId":"179","severity":1,"message":"204","line":86,"column":9,"nodeType":"181","messageId":"182","endLine":86,"endColumn":19},{"ruleId":"179","severity":1,"message":"205","line":96,"column":9,"nodeType":"181","messageId":"182","endLine":96,"endColumn":24},{"ruleId":"179","severity":1,"message":"206","line":117,"column":9,"nodeType":"181","messageId":"182","endLine":117,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":173,"column":15,"nodeType":"209","endLine":173,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":176,"column":15,"nodeType":"200","endLine":176,"endColumn":96},{"ruleId":"179","severity":1,"message":"210","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":16},{"ruleId":"179","severity":1,"message":"211","line":19,"column":8,"nodeType":"181","messageId":"182","endLine":19,"endColumn":16},{"ruleId":"184","severity":1,"message":"212","line":117,"column":6,"nodeType":"186","endLine":117,"endColumn":8,"suggestions":"213"},{"ruleId":"188","severity":1,"message":"189","line":252,"column":41,"nodeType":"190","messageId":"191","endLine":252,"endColumn":43},{"ruleId":"188","severity":1,"message":"189","line":271,"column":37,"nodeType":"190","messageId":"191","endLine":271,"endColumn":39},{"ruleId":"214","severity":1,"message":"215","line":355,"column":106,"nodeType":"216","messageId":"217","endLine":355,"endColumn":114},{"ruleId":"214","severity":1,"message":"215","line":358,"column":77,"nodeType":"216","messageId":"217","endLine":358,"endColumn":85},{"ruleId":"179","severity":1,"message":"192","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":31},{"ruleId":"179","severity":1,"message":"218","line":213,"column":9,"nodeType":"181","messageId":"182","endLine":213,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":242,"column":24,"nodeType":"221","messageId":"217","endLine":242,"endColumn":26},{"ruleId":"184","severity":1,"message":"222","line":265,"column":6,"nodeType":"186","endLine":265,"endColumn":91,"suggestions":"223"},{"ruleId":"214","severity":1,"message":"224","line":319,"column":25,"nodeType":"216","messageId":"217","endLine":319,"endColumn":40},{"ruleId":"214","severity":1,"message":"224","line":346,"column":25,"nodeType":"216","messageId":"217","endLine":346,"endColumn":40},{"ruleId":"214","severity":1,"message":"224","line":399,"column":25,"nodeType":"216","messageId":"217","endLine":399,"endColumn":40},{"ruleId":"214","severity":1,"message":"224","line":425,"column":25,"nodeType":"216","messageId":"217","endLine":425,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":449,"column":17,"nodeType":"200","endLine":449,"endColumn":131},{"ruleId":"179","severity":1,"message":"225","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"226","line":7,"column":18,"nodeType":"181","messageId":"182","endLine":7,"endColumn":28},{"ruleId":"207","severity":1,"message":"208","line":66,"column":79,"nodeType":"209","endLine":66,"endColumn":95},{"ruleId":"184","severity":1,"message":"212","line":103,"column":6,"nodeType":"186","endLine":103,"endColumn":18,"suggestions":"227"},{"ruleId":"207","severity":1,"message":"208","line":107,"column":79,"nodeType":"209","endLine":107,"endColumn":95},{"ruleId":"179","severity":1,"message":"228","line":66,"column":24,"nodeType":"181","messageId":"182","endLine":66,"endColumn":39},{"ruleId":"179","severity":1,"message":"229","line":67,"column":20,"nodeType":"181","messageId":"182","endLine":67,"endColumn":31},{"ruleId":"179","severity":1,"message":"230","line":68,"column":22,"nodeType":"181","messageId":"182","endLine":68,"endColumn":35},{"ruleId":"179","severity":1,"message":"231","line":38,"column":11,"nodeType":"181","messageId":"182","endLine":38,"endColumn":23},{"ruleId":"179","severity":1,"message":"232","line":12,"column":5,"nodeType":"181","messageId":"182","endLine":12,"endColumn":11},{"ruleId":"179","severity":1,"message":"233","line":16,"column":8,"nodeType":"181","messageId":"182","endLine":16,"endColumn":20},{"ruleId":"179","severity":1,"message":"234","line":39,"column":11,"nodeType":"181","messageId":"182","endLine":39,"endColumn":18},{"ruleId":"179","severity":1,"message":"235","line":17,"column":8,"nodeType":"181","messageId":"182","endLine":17,"endColumn":17},{"ruleId":"179","severity":1,"message":"232","line":12,"column":5,"nodeType":"181","messageId":"182","endLine":12,"endColumn":11},{"ruleId":"179","severity":1,"message":"234","line":38,"column":11,"nodeType":"181","messageId":"182","endLine":38,"endColumn":18},{"ruleId":"179","severity":1,"message":"236","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"232","line":12,"column":5,"nodeType":"181","messageId":"182","endLine":12,"endColumn":11},{"ruleId":"179","severity":1,"message":"234","line":41,"column":11,"nodeType":"181","messageId":"182","endLine":41,"endColumn":18},{"ruleId":"179","severity":1,"message":"232","line":11,"column":5,"nodeType":"181","messageId":"182","endLine":11,"endColumn":11},{"ruleId":"179","severity":1,"message":"234","line":39,"column":11,"nodeType":"181","messageId":"182","endLine":39,"endColumn":18},{"ruleId":"179","severity":1,"message":"237","line":8,"column":3,"nodeType":"181","messageId":"182","endLine":8,"endColumn":9},{"ruleId":"179","severity":1,"message":"238","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":14},{"ruleId":"179","severity":1,"message":"239","line":12,"column":3,"nodeType":"181","messageId":"182","endLine":12,"endColumn":10},{"ruleId":"179","severity":1,"message":"240","line":49,"column":9,"nodeType":"181","messageId":"182","endLine":49,"endColumn":20},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'EditorState' is defined but never used.","Identifier","unusedVar","'htmlToDraft' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["243"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHistory' is defined but never used.","'Link' is defined but never used.","'useTheme' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'mobileMoreAnchorEl' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'queryParameters' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactDOM' is defined but never used.","'StarIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'ID' and 'fiction'. Either include them or remove the dependency array.",["244"],"no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","unexpected","'handleChangeYear' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has a missing dependency: 'chosenSortID'. Either include it or remove the dependency array.",["245"],"Duplicate key 'backgroundColor'.","'detail' is defined but never used.","'detailTest' is defined but never used.",["246"],"'setListFontSize' is assigned a value but never used.","'setListFont' is assigned a value but never used.","'setListIndent' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'colors' is defined but never used.","'FavoriteIcon' is defined but never used.","'options' is assigned a value but never used.","'PhoneIcon' is defined but never used.","'Doughnut' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [values]",{"range":"255","text":"256"},"Update the dependencies array to be: [ID, fiction]",{"range":"257","text":"258"},"Update the dependencies array to be: [input, page, chosenCatID, chosenTagID, chosenYearID, chosenStatusID, setTotalNovels, chosenSortID]",{"range":"259","text":"260"},"Update the dependencies array to be: [ID, fiction, setFiction]",{"range":"261","text":"262"},[4308,4310],"[values]",[3072,3074],"[ID, fiction]",[7529,7614],"[input, page, chosenCatID, chosenTagID, chosenYearID, chosenStatusID, setTotalNovels, chosenSortID]",[2544,2556],"[ID, fiction, setFiction]"]