[{"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\index.js":"1","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\App.js":"2","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js":"3","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js":"4","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js":"5","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js":"6","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js":"7","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js":"8","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js":"9","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js":"10","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js":"11"},{"size":183,"mtime":1608649555223,"results":"12","hashOfConfig":"13"},{"size":340,"mtime":1608912278847,"results":"14","hashOfConfig":"13"},{"size":2647,"mtime":1608913537113,"results":"15","hashOfConfig":"13"},{"size":4093,"mtime":1608908720942,"results":"16","hashOfConfig":"13"},{"size":2221,"mtime":1608908711824,"results":"17","hashOfConfig":"13"},{"size":18481,"mtime":1608903569307,"results":"18","hashOfConfig":"13"},{"size":16465,"mtime":1608903569305,"results":"19","hashOfConfig":"13"},{"size":2069,"mtime":1608908692520,"results":"20","hashOfConfig":"13"},{"size":2139,"mtime":1608908711811,"results":"21","hashOfConfig":"13"},{"size":636,"mtime":1608903569306,"results":"22","hashOfConfig":"13"},{"size":1834,"mtime":1608909920486,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10qbzzh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\index.js",[],["49","50"],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\App.js",[],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js",["51","52","53"],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js",["54"],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js",["55","56","57","58"],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js",["59","60"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Checkbox,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport GroupHeader from './groupHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    maxWidth: '940px',\r\n    minHeight: '100%',\r\n    borderRadius: '4',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: {\r\n    padding: '16px 20px',\r\n  },\r\n  inputLabel: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    padding: '8px 0px 24px 0px',\r\n    fontSize: 16,\r\n  },\r\n  editorStyleDes: {\r\n    minHeight: '200px',\r\n    maxHeight: '200px',\r\n  },\r\n  editorStyleChapter: {\r\n    minHeight: '400px',\r\n    maxHeight: '400px',\r\n  },\r\n  toolbarStyle: {\r\n    marginBottom: '0px',\r\n    borderBottom: \"1px solid #C0C0C0\",\r\n  },\r\n  wrapperStyle: {\r\n    border: \"1px solid #C0C0C0\",\r\n  },\r\n\r\n  formCheckBoxGrid: {\r\n    textAlign: 'left',\r\n    width: '100%',\r\n    marginBottom: '5px',\r\n    direction: \"row\",\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n\r\n  },\r\n  formCheckBoxGridItem: {\r\n    marginBottom: '-10px'\r\n  },\r\n  FormHelperText: {\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  imageBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n\r\n  },\r\n  image: {\r\n    height: '168px',\r\n    width: '168px',\r\n    paddingBottom: '10px'\r\n  },\r\n  imageButton: {\r\n    width: '117px',\r\n    height: '36px',\r\n    backgroundColor: '#2196F3',\r\n    marginRight: '10px',\r\n    textTransform: 'none',\r\n  },\r\n  deleteImageButton: {\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    textTransform: 'none',\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  uploadButton: {\r\n    backgroundColor: '#2196F3',\r\n    color: '#FFFFFF',\r\n  }\r\n\r\n\r\n}));\r\n\r\nconst ageGroup = [\r\n  {\r\n    value: 'all',\r\n    label: 'Mọi lứa tuổi'\r\n  },\r\n  {\r\n    value: 'teen',\r\n    label: 'Teen'\r\n  },\r\n  {\r\n    value: '18',\r\n    label: 'Trên 18 tuổi'\r\n  }\r\n];\r\n\r\nconst language = [\r\n  {\r\n    value: 'vietnam',\r\n    label: 'Tiếng Việt'\r\n  },\r\n  {\r\n    value: 'english',\r\n    label: 'Tiếng Anh'\r\n  },\r\n  {\r\n    value: 'another',\r\n    label: 'Ngôn ngữ khác'\r\n  }\r\n];\r\n\r\nconst genre = [\r\n  {\r\n    value: 'action',\r\n    label: 'Hành động'\r\n  },\r\n  {\r\n    value: 'comedy',\r\n    label: 'Hài hước'\r\n  },\r\n  {\r\n    value: 'horror',\r\n    label: 'Kinh dị'\r\n  },\r\n  {\r\n    value: 'stragedy',\r\n    label: 'Bi kịch'\r\n  },\r\n  {\r\n    value: 'romance',\r\n    label: 'Tình cảm'\r\n  },\r\n  {\r\n    value: 'history',\r\n    label: 'Lịch sử'\r\n  },\r\n];\r\n\r\nconst tags = [\r\n  {\r\n    value: 'Male lead',\r\n    label: 'Nam chinh'\r\n  },\r\n  {\r\n    value: 'Female lead',\r\n    label: 'Nữ chính'\r\n  },\r\n\r\n\r\n];\r\n\r\nfunction Uploading() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    genre: {},\r\n    tags: {},\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: '',\r\n    shortDes: '',\r\n    longDes: '',\r\n    age: '',\r\n    language: '',\r\n    titleChapter: '',\r\n    data: '',\r\n  });\r\n\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  const [preview, setPreview] = useState()\r\n\r\n  // intial data\r\n  useEffect(() => {\r\n    var temp = {};\r\n    for (var i = 0; i < genre.length; i++) {\r\n      temp[genre[i].value] = false;\r\n    }\r\n    var temp2 = {};\r\n    for (var j = 0; j < tags.length; j++) {\r\n      temp2[tags[j].value] = false;\r\n    }\r\n\r\n    setValues({\r\n      ...values,\r\n      genre: temp,\r\n      tags: temp2\r\n    });\r\n  }, [])\r\n\r\n  // upload image \r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile)\r\n    setPreview(objectUrl)\r\n\r\n    // free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl)\r\n  }, [selectedFile])\r\n\r\n  const onSelectFile = e => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined)\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n    e.target.value = '';\r\n  }\r\n\r\n  const onDeleteImage = (e) => {\r\n    setSelectedFile(undefined)\r\n    return;\r\n  }\r\n\r\n  // handle change of form\r\n  const handleChange = (event) => {                     // change textfield\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const handleChangeEditorDes = (editorState) => {      // change long des editor \r\n    setValues({\r\n      ...values,\r\n      longDes: editorState\r\n    });\r\n  };\r\n  const handleChangeEditorData = (editorState) => {   // change data editor \r\n    setValues({\r\n      ...values,\r\n      data: editorState\r\n    });\r\n  };\r\n  const handleChangeGenre = (event) => {             // change genre checkbox \r\n    setValues({\r\n      ...values,\r\n      genre: { ...values.genre, [event.target.name]: event.target.checked }\r\n    });\r\n  }\r\n  const handleChangeTags = (event) => {            // change tags checkbox \r\n    setValues({\r\n      ...values,\r\n      tags: { ...values.tags, [event.target.name]: event.target.checked }\r\n    });\r\n\r\n  }\r\n\r\n  // validate for form\r\n  const handleValidate = (event) => {                 // validate textfield\r\n    if ((event.target.name === 'title' || event.target.name === 'titleChapter') && event.target.value === '') {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        [event.target.name]: \"\"\r\n      });\r\n    }\r\n  }\r\n  const handleValidateEditorDes = (e, editorState) => {   // validate editor\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        longDes: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleValidateEditorData = (e, editorState) => {\r\n    if (!editorState.getCurrentContent().hasText()) {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"* Không được để trống\"\r\n      });\r\n    }\r\n    else {\r\n      setErrors({\r\n        ...errors,\r\n        data: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  var genreList = Object.entries(values.genre);                     // validate genre checkbox\r\n  const errorGenre = genreList.filter((v) => v[1] === true).length > 4;\r\n\r\n\r\n  // submit form\r\n  const onSubmit = (event) => {\r\n    var tempErrors = {...errors};;\r\n    if (values.title === '') {\r\n      tempErrors.title = \"* Không được để trống\";\r\n    }\r\n    if (values.titleChapter === '') {\r\n      tempErrors.titleChapter = \"* Không được để trống\";\r\n    }\r\n    if (values.longDes === '' || !values.longDes.getCurrentContent().hasText()) {\r\n      tempErrors.longDes = \"* Không được để trống\";\r\n    }\r\n    if (values.data === '' ||  !values.data.getCurrentContent().hasText()) {\r\n      tempErrors.data = \"* Không được để trống\";\r\n    }\r\n    setErrors(tempErrors);\r\n    \r\n    var errorList = Object.entries(tempErrors);\r\n    const hasError = errorList.filter((v) => v[1] !== '').length > 0;\r\n    if (hasError || errorGenre) {\r\n      console.log(tempErrors)\r\n    }\r\n    else {\r\n      console.log(values)\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"lg\">\r\n      <form autoComplete=\"off\" noValidate>\r\n        <Card>\r\n          <CardHeader className={classes.cardHeader}\r\n            avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n            titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n            title=\"Đăng truyện mới\" />\r\n\r\n          <GroupHeader title=\"Thông tin cơ bản\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.title !== '' ? true : false}\r\n                  helperText={errors.title !== '' ? errors.title : ''}\r\n                  fullWidth\r\n                  name=\"title\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả ngắn</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={false}\r\n                  helperText={false ? \"daw\" : \"\"}\r\n                  fullWidth\r\n                  name=\"shortDes\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Mô tả dài</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleDes}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorDes}\r\n                  onBlur={handleValidateEditorDes}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.longDes !== '' ? errors.longDes : ''}\r\n                </FormHelperText>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Thông tin chi tiết\" />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Độ tuổi </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"age\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {ageGroup.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ngôn ngữ</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\">  </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  onChange={handleChange}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={values.state}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {language.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Thể loại</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {genre.map(genre => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeGenre} name={genre.value} />}\r\n                        label={genre.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText} error={errorGenre}> * Tối đa 4 thể loại </FormHelperText>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tags</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid container spacing={0} className={classes.formCheckBoxGrid}>\r\n                  {tags.map(tags => (\r\n                    <Grid item xs={3}>\r\n                      <FormControlLabel\r\n                        className={classes.formCheckBoxGridItem}\r\n                        control={<Checkbox onChange={handleChangeTags} name={tags.value} />}\r\n                        label={tags.label}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <FormHelperText className={classes.FormHelperText}> </FormHelperText>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Ảnh\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Ảnh bìa truyện </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> </Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <div className={classes.imageBox}>\r\n                  <img className={classes.image} src={preview} />\r\n                  <Box>\r\n                    <Button className={classes.imageButton} color=\"primary\" variant=\"contained\" component=\"label\">\r\n                      Đăng ảnh\r\n                    <input type='file' hidden onChange={onSelectFile} />\r\n                    </Button>\r\n                    <Button className={classes.deleteImageButton} color=\"primary\" size=\"small\" onClick={onDeleteImage}>\r\n                      Xóa\r\n                    </Button>\r\n                  </Box>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <GroupHeader title=\"Chương truyện đầu tiên\" />\r\n          <CardContent className={classes.cardContent}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Tiêu đề chương </Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  error={errors.titleChapter !== '' ? true : false}\r\n                  helperText={errors.titleChapter !== '' ? errors.titleChapter : ''}\r\n                  fullWidth\r\n                  name=\"titleChapter\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleValidate}\r\n                  required\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Container className={classes.inputLabel}>\r\n                  <Typography>Nội dung</Typography>\r\n                  &nbsp;\r\n                  <Typography color=\"error\"> *</Typography>\r\n                </Container>\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Editor\r\n                  toolbarClassName={classes.toolbarStyle}\r\n                  editorClassName={classes.editorStyleChapter}\r\n                  wrapperClassName={classes.wrapperStyle}\r\n                  onEditorStateChange={handleChangeEditorData}\r\n                  onBlur={handleValidateEditorData}\r\n                />\r\n                <FormHelperText className={classes.FormHelperText} error>\r\n                  {errors.data !== '' ? errors.data : ''}\r\n                </FormHelperText>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" p={2} >\r\n            <Button className={classes.uploadButton} color='primary' variant=\"contained\" onClick={onSubmit}>\r\n              Đăng truyện\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Uploading;","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js",[],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js",["61","62"],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js",["63","64","65"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Typography,\r\n    colors,\r\n    makeStyles,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\nconst ManagementCard = ({ className, ...rest }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const options = {\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n        legend: {\r\n            display: false\r\n        },\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips: {\r\n            backgroundColor: theme.palette.background.default,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            borderColor: theme.palette.divider,\r\n            borderWidth: 1,\r\n            enabled: true,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            intersect: false,\r\n            mode: 'index',\r\n            titleFontColor: theme.palette.text.primary\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n            style={{ height: '400px', width: '300px', backgroundColor: \"#e5e5e5\"}}\r\n        >\r\n            <CardHeader title=\"QUẢN LÝ TRUYỆN\" />\r\n            <Divider />\r\n            <CardContent>\r\n                <Box\r\n                    position=\"relative\"\r\n                >\r\n                    <AppsIcon style={{ fontSize: 100 }} />\r\n                </Box>\r\n                <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    mt={2}\r\n                >\r\n                    <Typography>DANH SÁCH TRUYỆN</Typography>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nManagementCard.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default ManagementCard;\r\n","D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js",[],"D:\\PhanMinh\\GiaoDien\\DoAn\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":9},{"ruleId":"72","severity":1,"message":"76","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":12,"column":3,"nodeType":"74","messageId":"75","endLine":12,"endColumn":10},{"ruleId":"72","severity":1,"message":"78","line":17,"column":8,"nodeType":"74","messageId":"75","endLine":17,"endColumn":17},{"ruleId":"72","severity":1,"message":"79","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":18},{"ruleId":"72","severity":1,"message":"77","line":10,"column":5,"nodeType":"74","messageId":"75","endLine":10,"endColumn":12},{"ruleId":"72","severity":1,"message":"80","line":12,"column":5,"nodeType":"74","messageId":"75","endLine":12,"endColumn":11},{"ruleId":"72","severity":1,"message":"81","line":30,"column":11,"nodeType":"74","messageId":"75","endLine":30,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":227,"column":6,"nodeType":"84","endLine":227,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":566,"column":19,"nodeType":"88","endLine":566,"endColumn":66},{"ruleId":"72","severity":1,"message":"80","line":12,"column":5,"nodeType":"74","messageId":"75","endLine":12,"endColumn":11},{"ruleId":"72","severity":1,"message":"81","line":27,"column":11,"nodeType":"74","messageId":"75","endLine":27,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":12,"column":5,"nodeType":"74","messageId":"75","endLine":12,"endColumn":11},{"ruleId":"72","severity":1,"message":"89","line":16,"column":8,"nodeType":"74","messageId":"75","endLine":16,"endColumn":20},{"ruleId":"72","severity":1,"message":"81","line":28,"column":11,"nodeType":"74","messageId":"75","endLine":28,"endColumn":18},{"ruleId":"72","severity":1,"message":"90","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"91","line":5,"column":5,"nodeType":"74","messageId":"75","endLine":5,"endColumn":15},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Divider' is defined but never used.","'PhoneIcon' is defined but never used.","'Doughnut' is defined but never used.","'colors' is defined but never used.","'options' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FavoriteIcon' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [values]",{"range":"97","text":"98"},[4113,4115],"[values]"]