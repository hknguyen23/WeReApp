[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js":"20","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js":"21","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\resources\\data\\data.js":"22"},{"size":183,"mtime":1608628839843,"results":"23","hashOfConfig":"24"},{"size":1692,"mtime":1609042017706,"results":"25","hashOfConfig":"24"},{"size":5190,"mtime":1609001680453,"results":"26","hashOfConfig":"24"},{"size":484,"mtime":1609001680439,"results":"27","hashOfConfig":"24"},{"size":17222,"mtime":1609042017713,"results":"28","hashOfConfig":"24"},{"size":18629,"mtime":1609042228543,"results":"29","hashOfConfig":"24"},{"size":3991,"mtime":1609042071869,"results":"30","hashOfConfig":"24"},{"size":17829,"mtime":1609042017707,"results":"31","hashOfConfig":"24"},{"size":2150,"mtime":1609040685236,"results":"32","hashOfConfig":"24"},{"size":652,"mtime":1609042210264,"results":"33","hashOfConfig":"24"},{"size":574,"mtime":1609001675361,"results":"34","hashOfConfig":"24"},{"size":4405,"mtime":1609042277215,"results":"35","hashOfConfig":"24"},{"size":4561,"mtime":1609042296571,"results":"36","hashOfConfig":"24"},{"size":4125,"mtime":1609042320377,"results":"37","hashOfConfig":"24"},{"size":2199,"mtime":1609042287403,"results":"38","hashOfConfig":"24"},{"size":4093,"mtime":1609001675321,"results":"39","hashOfConfig":"24"},{"size":2809,"mtime":1609001680465,"results":"40","hashOfConfig":"24"},{"size":2247,"mtime":1609040685204,"results":"41","hashOfConfig":"24"},{"size":2142,"mtime":1609040685216,"results":"42","hashOfConfig":"24"},{"size":2109,"mtime":1609040685194,"results":"43","hashOfConfig":"24"},{"size":2081,"mtime":1609040685225,"results":"44","hashOfConfig":"24"},{"size":13101,"mtime":1609042017751,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1208h51",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\navBar\\navBar.js",["92","93","94","95","96","97","98","99"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\home\\home.js",["100","101","102"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { category, novels, topMonth, topWeek, allTime, imgURL } from '../../resources/data/data'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    // height: '100%',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '25%',\r\n  },\r\n  cardContent: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    flexGrow: 0,\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n    marginBottom: '-20px'\r\n  },\r\n  fab: {\r\n    width: '35%',\r\n    height: '35%',\r\n    fontSize: '50px',\r\n  },\r\n  tagContent: {\r\n    marginBottom: '10px',\r\n    textAlign: 'left',\r\n    display: 'block',\r\n    width: '100%',\r\n    padding: '10px',\r\n    backgroundColor: '#C4C4C4'\r\n  },\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    textAlign: 'right',\r\n    width: '70%',\r\n    marginRight: '5px'\r\n  },\r\n  floatLeft: {\r\n    float: \"left\",\r\n    width: '25%'\r\n  },\r\n  paperLikeShadow: {\r\n    boxShadow: '0 4px 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    left: 5,\r\n    top: 5,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [chosenCategory, setChosenCategory] = React.useState(1);\r\n  const [sortStrategy, setSortStrategy] = React.useState(0);\r\n  const [topStrategy, setTopStrategy] = React.useState(0);\r\n  const [novelByCat, setNovelByCat] = React.useState(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt));\r\n  const [displayedNovels, setDisplayNovels] = React.useState([]);\r\n  const [displayedTop, setDisplayedTop] = React.useState(topMonth);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleChangeCategory = (id) => {\r\n    setChosenCategory(id);\r\n    setPage(1);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (sortStrategy === 0)\r\n      setNovelByCat(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.updatedAt - novel1.updatedAt))\r\n    else\r\n      setNovelByCat(novels.filter(novel => novel.catId === chosenCategory).sort((novel1, novel2) => novel2.rating - novel1.rating));\r\n\r\n  }, [chosenCategory, sortStrategy])\r\n\r\n  React.useEffect(() => {\r\n    if (topStrategy === 0)\r\n      setDisplayedTop(topMonth);\r\n    else if (topStrategy === 1) setDisplayedTop(topWeek);\r\n    else setDisplayedTop(allTime);\r\n  }, [topStrategy]);\r\n\r\n  React.useEffect(() => {\r\n\r\n    const start = (page - 1) * 9;\r\n    const end = start + 9 - 1;\r\n    const paginatedNovels = novelByCat.filter((item, index) => index >= start && index <= end);\r\n    setDisplayNovels(paginatedNovels);\r\n\r\n  }, [page, novelByCat])\r\n  // main unit\r\n  return (\r\n    <>\r\n      <Container className={classes.cardGrid} maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={2} md={2}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title={<b>THỂ LOẠI</b>} style={{ color: \"#FF781F\" }} className={classes.cardHeader} />\r\n              <CardContent className={classes.cardContent}>\r\n                {\r\n                  category.map((item) => (\r\n                    (\r\n                      chosenCategory === item.id ?\r\n                        <Button key={item.id} style={{ textAlign: \"left\", width: \"100%\", marginBottom: \"10px\", borderRadius: '0', backgroundImage: 'linear-gradient(to right, #c1c1c1 0%, #c1c1c1 95%, #FF781F 95%, #FF781F 100%)' }} >\r\n                          <span style={{ width: \"86%\", fontWeight: \"bold\" }}>\r\n                            {item.name}\r\n                          </span>\r\n                          <span style={{ width: \"14%\" }}>\r\n                            <DoubleArrowIcon />\r\n                          </span>\r\n                        </Button>\r\n                        :\r\n                        <Button className={classes.tagContent} key={item.id} style={{ borderRadius: '0', backgroundColor: '#E1E1E1' }}\r\n                          onClick={() => handleChangeCategory(item.id)}\r\n                        >\r\n                          <b>{item.name}</b>\r\n                        </Button>\r\n                    )\r\n                  ))\r\n                }\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div style={{ marginBottom: '15px' }}>\r\n              <SimpleFilter sortStrategy={sortStrategy} setSortStrategy={setSortStrategy} />\r\n            </div>\r\n            <div>\r\n              <Grid container spacing={4}>\r\n                {\r\n                  novelByCat.length === 0 ?\r\n                    <Typography>Chưa có mẫu truyện thuộc thể loại này. Xin hãy quay lại sau.</Typography>\r\n                    // mới nhất\r\n                    :\r\n                    // (\r\n                    //   sortStrategy === 0 ?\r\n                    displayedNovels.map((novel, index) => (\r\n                      <Grid item xs={12} sm={4} md={4} key={index}>\r\n                        <Link to={`/Detail/${novel.id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                          <img src={imgURL[novel.id % imgURL.length]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n                        </Link>\r\n\r\n                        <div >\r\n                          <Typography title={novel.name} style={{\r\n                            width: \"100%\", display: 'inline-block',\r\n                            whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                          }}>\r\n                            <Link to={`/Detail/${novel.id}`} style={{ color: 'black' }}>{novel.name}</Link>\r\n                          </Typography>\r\n                        </div>\r\n                      </Grid>\r\n                    ))\r\n                  // :\r\n                  // //nổi bật nhất\r\n                  // displayedNovels.map((novel, index) => (\r\n                  //   <Grid item xs={12} sm={4} md={4} key={index}>\r\n                  //     <img src={imgURL[Math.floor(Math.random() * Math.floor(imgURL.length))]} width=\"100%\" height=\"220px\" style={{ borderRadius: '8px' }}></img>\r\n                  //     <div >\r\n                  //       <Typography style={{\r\n                  //         width: \"100%\", display: 'inline-block',\r\n                  //         whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'\r\n                  //       }}><a href=\"/path\" style={{ color: 'black' }}>{novel.name}</a></Typography>\r\n                  //     </div>\r\n                  //   </Grid>\r\n                  // ))\r\n                  // )\r\n                }\r\n              </Grid>\r\n            </div>\r\n            {\r\n              novelByCat.length !== 0 ?\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <PaginationRounded\r\n                    count={Math.ceil(novelByCat.length / 9)}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    page={page}\r\n                    setPage={setPage} />\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <TopFilter topStrategy={topStrategy} setTopStrategy={setTopStrategy} />\r\n            <div style={{ backgroundColor: '#E1E1E1', paddingTop: \"8px\" }}>\r\n              {\r\n                displayedTop.map((novel, index) => (\r\n                  <div key={index} style={{ backgroundColor: \"#c4c4c4\", borderRadius: \"8px\", marginTop: '5px', marginBottom: '5px', padding: \"10px\" }}>\r\n                    <div className={classes.container} >\r\n                      <div className={classes.floatLeft}>\r\n                        <StyledBadge badgeContent={index <= 2 ? index + 1 : null} color={index === 0 ? \"secondary\" : index === 1 ? \"error\" : \"primary\"}\r\n                          anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                          }}\r\n                          style={{ marginTop: \"10px\" }}\r\n                        >\r\n                          <Link to={`/Detail/${novel.id}`} >\r\n                            <img src={novel.img} alt={\"Novel avatar\"} width=\"100%\" height=\"130px\" style={{ borderRadius: \"8px\" }} />\r\n                          </Link>\r\n                        </StyledBadge>\r\n                      </div>\r\n                      <div className={classes.floatRight}>\r\n                        <Link to={`/Detail/${novel.id}`} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                          <Typography style={{ fontSize: \"25px\", fontWeight: \"bold\", textAlign: \"center\" }}>{novel.name}</Typography>\r\n                        </Link>\r\n                        <div title={novel.desc} style={{\r\n                          textAlign: \"justify\",\r\n                          overflow: \"hidden\",\r\n                          maxHeight: \"5.4em\",\r\n                          lineHeight: \"1.8em\",\r\n                          position: \"relative\",\r\n                          maxWidth: \"100%\",\r\n                          // \"&&:before\": {   unwork\r\n                          //   content: '\"...\"',\r\n                          //   position: \"absolute\",\r\n                          //   right: 0,\r\n                          //   bottom: 0\r\n                          // },\r\n                          // \"&&:after\": {\r\n                          //   content: '\"\"',\r\n                          //   position: \"absolute\",\r\n                          //   right: 0,\r\n                          //   width: \"1em\",\r\n                          //   height: \"1em\",\r\n                          //   marginTop: \"0.2em\",\r\n                          //   background: \"white\"\r\n                          // }\r\n                        }}>\r\n                          {novel.desc}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ textAlign: \"left\" }}>\r\n                      {\r\n                        [1, 2, 3, 4, 5].map((item, index) => (\r\n                          item <= novel.rating ?\r\n                            <StarIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                            :\r\n                            <StarBorderIcon key={index} fontSize={\"small\"} style={{ color: \"#FFB400\" }} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                      <span>\r\n                        Tác giả: {novel.author}\r\n                      </span>\r\n                      <span>\r\n                        Ngày đăng: {novel.date}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container >\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles_1 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  'Mới nhất',\r\n  'Nổi bật',\r\n];\r\n\r\nfunction SimpleFilter({ sortStrategy, setSortStrategy }) {\r\n  const classes = useStyles_1();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSortStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#c1c1c1\", width: \"20%\", borderRadius: \"8px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'white' }}\r\n        >\r\n          <ListItemText primary={options[sortStrategy]} />\r\n          < ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === sortStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles_2 = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#0057B2',\r\n      color: 'white',\r\n    },\r\n    // \"& .MuiPaginationItem\": {\r\n    //   backgroundColor: \"yellow\"\r\n    // },\r\n    // '& .page-item': {\r\n    //   backgroundColor: '#E0E0E0'\r\n    // }\r\n  },\r\n}));\r\n\r\nfunction PaginationRounded({ count, page, setPage }) {\r\n  const classes = useStyles_2();\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={count} page={page} shape=\"rounded\" color=\"primary\" onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst topOptions = [\r\n  \"TOP Tháng\",\r\n  \"TOP Năm\",\r\n  \"Mọi thời đại\"\r\n];\r\n\r\nconst useStyles_3 = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n}));\r\n\r\nfunction TopFilter({ topStrategy, setTopStrategy }) {\r\n  const classes = useStyles_3();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setTopStrategy(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\" style={{ padding: '0px', margin: \"0px\", backgroundColor: \"#FF781F\", borderRadius: \"0px\" }}>\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"when device is locked\"\r\n          onClick={handleClickListItem}\r\n          style={{ color: 'white' }}\r\n        >\r\n          <ListItemText style={{ textAlign: 'center' }} primary={topOptions[topStrategy]} />\r\n          <ExpandMoreIcon />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {topOptions.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === topStrategy}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div >\r\n  );\r\n}",["103","104"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\uploading.js",["105"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js",["106","107"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\detail\\detail.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\profile.js",["108","109","110"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\uploading\\groupHeader.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\globalStyles.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js",["111"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js",["112"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js",["113","114","115"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js",["116"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AnalystCard.js",["117"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\Infor.js",["118","119","120"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\FavoriteCard.js",["121","122","123"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\ManagementCard.js",["124","125","126"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\AddNovel.js",["127","128"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\profile\\SettingCard.js",["129","130"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\resources\\data\\data.js",[],{"ruleId":"131","severity":1,"message":"132","line":3,"column":31,"nodeType":"133","messageId":"134","endLine":3,"endColumn":35},{"ruleId":"131","severity":1,"message":"135","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":16},{"ruleId":"131","severity":1,"message":"136","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":12},{"ruleId":"131","severity":1,"message":"137","line":82,"column":10,"nodeType":"133","messageId":"134","endLine":82,"endColumn":28},{"ruleId":"131","severity":1,"message":"138","line":84,"column":9,"nodeType":"133","messageId":"134","endLine":84,"endColumn":19},{"ruleId":"131","severity":1,"message":"139","line":94,"column":9,"nodeType":"133","messageId":"134","endLine":94,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":152,"column":15,"nodeType":"142","endLine":152,"endColumn":40},{"ruleId":"143","severity":1,"message":"144","line":155,"column":15,"nodeType":"145","endLine":155,"endColumn":96},{"ruleId":"146","severity":1,"message":"147","line":411,"column":6,"nodeType":"148","endLine":411,"endColumn":36,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"150","line":418,"column":6,"nodeType":"148","endLine":418,"endColumn":19,"suggestions":"151"},{"ruleId":"143","severity":1,"message":"144","line":478,"column":27,"nodeType":"145","endLine":478,"endColumn":128},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"156","line":231,"column":6,"nodeType":"148","endLine":231,"endColumn":8,"suggestions":"157"},{"ruleId":"131","severity":1,"message":"158","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":11},{"ruleId":"131","severity":1,"message":"159","line":86,"column":23,"nodeType":"133","messageId":"134","endLine":86,"endColumn":37},{"ruleId":"131","severity":1,"message":"160","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"161","line":6,"column":5,"nodeType":"133","messageId":"134","endLine":6,"endColumn":15},{"ruleId":"131","severity":1,"message":"162","line":7,"column":13,"nodeType":"133","messageId":"134","endLine":7,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":44,"column":79,"nodeType":"142","endLine":44,"endColumn":95},{"ruleId":"140","severity":1,"message":"141","line":97,"column":79,"nodeType":"142","endLine":97,"endColumn":95},{"ruleId":"131","severity":1,"message":"163","line":65,"column":24,"nodeType":"133","messageId":"134","endLine":65,"endColumn":39},{"ruleId":"131","severity":1,"message":"164","line":66,"column":20,"nodeType":"133","messageId":"134","endLine":66,"endColumn":31},{"ruleId":"131","severity":1,"message":"165","line":67,"column":22,"nodeType":"133","messageId":"134","endLine":67,"endColumn":35},{"ruleId":"131","severity":1,"message":"166","line":37,"column":11,"nodeType":"133","messageId":"134","endLine":37,"endColumn":23},{"ruleId":"131","severity":1,"message":"167","line":17,"column":8,"nodeType":"133","messageId":"134","endLine":17,"endColumn":17},{"ruleId":"131","severity":1,"message":"168","line":8,"column":3,"nodeType":"133","messageId":"134","endLine":8,"endColumn":9},{"ruleId":"131","severity":1,"message":"169","line":10,"column":3,"nodeType":"133","messageId":"134","endLine":10,"endColumn":14},{"ruleId":"131","severity":1,"message":"170","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":12,"endColumn":10},{"ruleId":"131","severity":1,"message":"171","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":18},{"ruleId":"131","severity":1,"message":"172","line":12,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":11},{"ruleId":"131","severity":1,"message":"173","line":30,"column":11,"nodeType":"133","messageId":"134","endLine":30,"endColumn":18},{"ruleId":"131","severity":1,"message":"172","line":12,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":11},{"ruleId":"131","severity":1,"message":"174","line":16,"column":8,"nodeType":"133","messageId":"134","endLine":16,"endColumn":20},{"ruleId":"131","severity":1,"message":"173","line":28,"column":11,"nodeType":"133","messageId":"134","endLine":28,"endColumn":18},{"ruleId":"131","severity":1,"message":"172","line":11,"column":5,"nodeType":"133","messageId":"134","endLine":11,"endColumn":11},{"ruleId":"131","severity":1,"message":"173","line":27,"column":11,"nodeType":"133","messageId":"134","endLine":27,"endColumn":18},{"ruleId":"131","severity":1,"message":"172","line":12,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":11},{"ruleId":"131","severity":1,"message":"173","line":27,"column":11,"nodeType":"133","messageId":"134","endLine":27,"endColumn":18},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'mobileMoreAnchorEl' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'novels'. Either include it or remove the dependency array.","ArrayExpression",["175"],"React Hook React.useEffect has missing dependencies: 'allTime', 'topMonth', and 'topWeek'. Either include them or remove the dependency array.",["176"],"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["179"],"'useTheme' is defined but never used.","'setChapterList' is assigned a value but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","'setListFontSize' is assigned a value but never used.","'setListFont' is assigned a value but never used.","'setListIndent' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'PhoneIcon' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'Doughnut' is defined but never used.","'colors' is defined but never used.","'options' is assigned a value but never used.","'FavoriteIcon' is defined but never used.",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},"Update the dependencies array to be: [chosenCategory, novels, sortStrategy]",{"range":"186","text":"187"},"Update the dependencies array to be: [allTime, topMonth, topStrategy, topWeek]",{"range":"188","text":"189"},"Update the dependencies array to be: [values]",{"range":"190","text":"191"},[14620,14650],"[chosenCategory, novels, sortStrategy]",[14844,14857],"[allTime, topMonth, topStrategy, topWeek]",[4220,4222],"[values]"]