[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Reading.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js":"8"},{"size":183,"mtime":1608628839843,"results":"9","hashOfConfig":"10"},{"size":195,"mtime":1608910080766,"results":"11","hashOfConfig":"10"},{"size":2653,"mtime":1608919371250,"results":"12","hashOfConfig":"10"},{"size":4119,"mtime":1608891824993,"results":"13","hashOfConfig":"10"},{"size":4457,"mtime":1608919215002,"results":"14","hashOfConfig":"10"},{"size":1822,"mtime":1608889396862,"results":"15","hashOfConfig":"10"},{"size":4558,"mtime":1608919734329,"results":"16","hashOfConfig":"10"},{"size":1804,"mtime":1608916961020,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1208h51",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\index.js",[],["39","40"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\reading.js",["41"],"import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nimport ReadingPanel from './ReadingPanel';\r\nimport InfoPanel from './InfoPanel';\r\nimport Toolbar from './Toolbar';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    width: '940px',\r\n    minHeight: '100%',\r\n    borderRadius: '4px',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  cardHeader: {\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#0452BB'\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    padding: '5px 0px',\r\n  },\r\n\r\n}));\r\n\r\nconst data = [\r\n  {\r\n    number: 1,\r\n    title: 'Tiêu đề chương 1',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 2,\r\n    title: 'Tiêu đề chương 2',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 3,\r\n    title: 'Tiêu đề chương 3',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 4,\r\n    title: 'Tiêu đề chương 4 ',\r\n    selected: true,\r\n  },\r\n  {\r\n    number: 5,\r\n    title: 'Tiêu đề chương 5',\r\n    selected: false,\r\n  },\r\n  {\r\n    number: 6,\r\n    title: 'Tiêu đề chương 6',\r\n    selected: false,\r\n  },\r\n\r\n]\r\n\r\nconst Reading = () => {\r\n  const classes = useStyles();\r\n  const [chapterList, setChapterList] = useState(data);\r\n  const [font, setFont] = useState(\"Arial\");\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [indent, setIndent] = useState('90%');\r\n\r\n  const selected = chapterList.filter((chapter) => chapter.selected === true);\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"lg\">\r\n      <Card>\r\n        <CardHeader className={classes.cardHeader}\r\n          avatar={<MenuBookIcon style={{ fontSize: 30 }} />}\r\n          titleTypographyProps={{ variant: 'h5', align: \"left\" }}\r\n          title=\"Đọc truyện\" />\r\n        <CardContent className={classes.cardContent}>\r\n          <InfoPanel />\r\n          <Divider />\r\n          <Toolbar font={font} fontSize={fontSize} indent={indent} setFont={(i) => setFont(i)} setFontSize={(i) => setFontSize(i)} setIndent={(i) => setIndent(i)}/>\r\n          <Divider />\r\n          <ControlPanel/>\r\n          <Divider />\r\n          <ReadingPanel selected={selected[0]} font={font} fontSize={fontSize} indent={indent}/>\r\n          <Divider />\r\n          <ControlPanel />\r\n          <Divider />\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Reading;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\InfoPanel.js",["42","43","44"],"import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\n\r\nimport defaultImg from '../../resources/images/defaultAvatar.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n    marginTop: '15px',\r\n    marginBottom: '15px'\r\n  },\r\n  rightContainer: {\r\n    float: \"right\",\r\n    width: '74%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'left',\r\n  },\r\n  leftContainer: {\r\n    float: \"left\",\r\n    width: '26%',\r\n    textAlign: 'left',\r\n  },\r\n  divider: {\r\n    backgroundColor: 'black'\r\n  }\r\n}));\r\n\r\nconst fiction = {\r\n  id: 1,\r\n  title: \"Truyện đời tôi\",\r\n  status: 1,\r\n  views: 12345,\r\n  followers: 350,\r\n  description: \"Donec eu tellus ut dolor viverra porta. Aliquam sit amet velit vel odio viverra euismod fringilla eu tellus. Aenean dapibus maximus aliquet. Donec bibendum blandit enim et facilisis.\",\r\n  rating: 3,\r\n  authors: [{\r\n    id: 1,\r\n    name: \"John Nguyen\"\r\n  }],\r\n  comments: [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }, { id: 6 }, { id: 7 }]\r\n}\r\n\r\nconst textSize = '18px';\r\n\r\nconst InfoPanel = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <div className={classes.container}>\r\n          <div className={classes.leftContainer}>\r\n            <img height={230} width={200} src={defaultImg} alt=\"Default fiction\" \r\n              style={{ border: \"1px solid black\" }}\r\n            />    \r\n          </div>\r\n\r\n          <div className={classes.rightContainer}>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <Typography variant=\"h4\" style={{ fontSize: '34px', marginRight: '24px' }}>{fiction.title}</Typography>\r\n              <Button style={{ minWidth: '45px', height: '45px', color: 'white',\r\n                backgroundColor: '#27ae60', borderRadius: '8px', marginRight: '10px' }}\r\n              >\r\n                <QuestionAnswerIcon style={{ width: '30px', height: '30px'}}></QuestionAnswerIcon>\r\n              </Button>\r\n              <Button style={{ minWidth: '45px', height: '45px', color: 'white',\r\n                backgroundColor: '#27ae60', borderRadius: '8px' }}\r\n              >\r\n                <BookmarkIcon style={{ width: '30px', height: '30px'}}></BookmarkIcon>\r\n              </Button>\r\n            </div>\r\n            <Typography style={{ fontSize: textSize, display: 'flex', color: 'gray' }}>\r\n              Bởi&nbsp;\r\n              {fiction.authors.map(author => \r\n                <Typography component={'span'} key={author.id} style={{ fontSize: textSize, color: '#0b79d0' }}>\r\n                  {author.name}&nbsp;\r\n                </Typography>\r\n              )}\r\n            </Typography>\r\n            <br></br>\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n              <Typography style={{ fontSize: textSize,  width: '37%' }}>\r\n                Trạng thái:\r\n                {fiction.status === 1 ? \" Đang cập nhật\" : fiction.status === 2 ? \" Hoàn chỉnh\" : \" Bị hủy\"}\r\n              </Typography>\r\n              <Typography style={{ fontSize: textSize, width: '25%' }}>\r\n                Lượt xem: {fiction.views}\r\n              </Typography>\r\n              <Typography style={{ fontSize: textSize, width: '20%' }}>\r\n                Theo dõi: {fiction.followers}\r\n              </Typography>\r\n              <Typography style={{ fontSize: textSize, width: '18%' }}>\r\n                Bình luận: {fiction.comments.length}\r\n              </Typography>\r\n            </div>\r\n            <br></br>\r\n            <Typography style={{ fontSize: textSize, wordBreak: 'break-all', textAlign: 'justify' }}>\r\n              {fiction.description}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default InfoPanel;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Toolbar.js",["45","46","47","48","49","50"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Box,\r\n    TextField,\r\n    Typography,\r\n    Switch,\r\n    makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'rows',\r\n        justifyContent: 'center',\r\n    },\r\n    toolbar: {\r\n        width: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'rows',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '14px',\r\n        fontSize: '20px'\r\n    },\r\n    marginIcon: {\r\n        marginRight: '5px'\r\n    },\r\n    marginGroup: {\r\n        marginRight: '24px'\r\n    },\r\n    fontIcon: {\r\n        width: '33px',\r\n        height: '33px',\r\n        color: '#2F80ED',\r\n    },\r\n    fontDropdown: {\r\n        width: '200px'\r\n    }\r\n}));\r\n\r\nconst data1 = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28];\r\nconst data2 = ['Arial', 'Roboto', 'Cambria', 'Georgia', 'Times New Roman'];\r\nconst data3 = ['50%', '60%', '70%', '80%', '90%'];\r\n\r\nconst Toolbar = (props) => {\r\n    const classes = useStyles();\r\n    const [dark, setDark] = useState(false);\r\n    const [listFontSize, setListFontSize] = useState(data1);\r\n    const [listFont, setListFont] = useState(data2);\r\n    const [listIndent, setListIndent] = useState(data3);\r\n\r\n    const handleChangeFont = (e) => {\r\n        props.setFont(e.target.value);\r\n    }\r\n    const handleChangeFontSize = (e) => {\r\n        props.setFontSize(e.target.value);\r\n    }\r\n    const handleChangeIndent = (e) => {\r\n        props.setIndent(e.target.value);\r\n    }\r\n\r\n    const handleChangeDark = () => {\r\n        console.log(\"hello\")\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\">\r\n            <Box className={classes.toolbar}>\r\n                <Typography className={classes.marginIcon}>Dark mode</Typography>\r\n                <Switch\r\n                    className={classes.marginGroup} onChange={handleChangeDark}\r\n                    color=\"primary\"\r\n                    name=\"dark\"\r\n                />\r\n                <FontDownloadIcon className={`${classes.fontIcon} ${classes.marginIcon}`} />\r\n                <TextField\r\n                    className={`${classes.fontDropdown} ${classes.marginGroup}`}\r\n                    size=\"small\"\r\n                    name=\"font\"\r\n                    onChange={handleChangeFont}\r\n                    required\r\n                    select\r\n                    SelectProps={{ native: true }}\r\n                    variant=\"outlined\"\r\n                    value={props.font}\r\n                >\r\n                    {listFont.map((option) => (\r\n                        <option key={option} value={option} >\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <Typography className={classes.marginIcon}>Size</Typography>\r\n                <TextField\r\n                    className={classes.marginGroup}\r\n                    size=\"small\"\r\n                    name=\"fontSize\"\r\n                    onChange={handleChangeFontSize}\r\n                    required\r\n                    select\r\n                    SelectProps={{ native: true }}\r\n                    variant=\"outlined\"\r\n                    value={props.fontSize}\r\n                >\r\n                    {listFontSize.map((option) => (\r\n                        <option key={option} value={option} >\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n\r\n                <Typography className={classes.marginIcon}>Indent</Typography>\r\n                <TextField\r\n                    className={classes.marginGroup}\r\n                    size=\"small\"\r\n                    name=\"indent\"\r\n                    onChange={handleChangeIndent}\r\n                    required\r\n                    select\r\n                    SelectProps={{ native: true }}\r\n                    variant=\"outlined\"\r\n                    value={props.indent}\r\n                >\r\n                    {listIndent.map((option) => (\r\n                        <option key={option} value={option} >\r\n                            {option}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Toolbar;","C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\Reading.js",["51","52","53","54","55","56","57","58","59","60","61"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ReadingPanel.js",["62","63","64","65","66"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WeReApp\\we-read-app\\src\\components\\reading\\ControlPanel.js",["67","68","69","70","71","72"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Button,\r\n    ButtonBase,\r\n    TextField,\r\n    makeStyles, Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        paddingRight: '0px',\r\n        paddingLeft: '0px',\r\n\r\n    },\r\n    button: {\r\n        width: '297px',\r\n        height: '36px',\r\n        borderRadius: '0px',\r\n        backgroundColor: '#2196F3',\r\n    },\r\n}));\r\n\r\nconst ControlPanel = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\">\r\n            <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<ArrowBackIosIcon />}\r\n            >\r\n                Chương trước\r\n            </Button>\r\n            <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n            >\r\n                Danh sách chương\r\n            </Button>\r\n            <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                endIcon={<ArrowForwardIosIcon />}\r\n            >\r\n                Chương sau\r\n        </Button>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":75,"column":23,"nodeType":"79","messageId":"80","endLine":75,"endColumn":37},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":10},{"ruleId":"77","severity":1,"message":"83","line":8,"column":3,"nodeType":"79","messageId":"80","endLine":8,"endColumn":12},{"ruleId":"77","severity":1,"message":"84","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"85","line":50,"column":12,"nodeType":"79","messageId":"80","endLine":50,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":50,"column":18,"nodeType":"79","messageId":"80","endLine":50,"endColumn":25},{"ruleId":"77","severity":1,"message":"87","line":51,"column":26,"nodeType":"79","messageId":"80","endLine":51,"endColumn":41},{"ruleId":"77","severity":1,"message":"88","line":52,"column":22,"nodeType":"79","messageId":"80","endLine":52,"endColumn":33},{"ruleId":"77","severity":1,"message":"89","line":53,"column":24,"nodeType":"79","messageId":"80","endLine":53,"endColumn":37},{"ruleId":"77","severity":1,"message":"84","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"90","line":4,"column":3,"nodeType":"79","messageId":"80","endLine":4,"endColumn":6},{"ruleId":"77","severity":1,"message":"91","line":5,"column":3,"nodeType":"79","messageId":"80","endLine":5,"endColumn":9},{"ruleId":"77","severity":1,"message":"92","line":10,"column":3,"nodeType":"79","messageId":"80","endLine":10,"endColumn":7},{"ruleId":"77","severity":1,"message":"83","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":12},{"ruleId":"77","severity":1,"message":"93","line":12,"column":3,"nodeType":"79","messageId":"80","endLine":12,"endColumn":13},{"ruleId":"77","severity":1,"message":"94","line":13,"column":3,"nodeType":"79","messageId":"80","endLine":13,"endColumn":19},{"ruleId":"77","severity":1,"message":"95","line":14,"column":3,"nodeType":"79","messageId":"80","endLine":14,"endColumn":17},{"ruleId":"77","severity":1,"message":"96","line":15,"column":3,"nodeType":"79","messageId":"80","endLine":15,"endColumn":11},{"ruleId":"77","severity":1,"message":"97","line":54,"column":10,"nodeType":"79","messageId":"80","endLine":54,"endColumn":16},{"ruleId":"77","severity":1,"message":"98","line":54,"column":18,"nodeType":"79","messageId":"80","endLine":54,"endColumn":27},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"82","line":4,"column":5,"nodeType":"79","messageId":"80","endLine":4,"endColumn":12},{"ruleId":"77","severity":1,"message":"99","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"100","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":20},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"101","line":5,"column":5,"nodeType":"79","messageId":"80","endLine":5,"endColumn":15},{"ruleId":"77","severity":1,"message":"83","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"93","line":7,"column":17,"nodeType":"79","messageId":"80","endLine":7,"endColumn":27},{"ruleId":"77","severity":1,"message":"102","line":34,"column":11,"nodeType":"79","messageId":"80","endLine":34,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'setChapterList' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Divider' is defined but never used.","'TextField' is defined but never used.","'useEffect' is defined but never used.","'dark' is assigned a value but never used.","'setDark' is assigned a value but never used.","'setListFontSize' is assigned a value but never used.","'setListFont' is assigned a value but never used.","'setListIndent' is assigned a value but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Checkbox' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'Toolbar' is defined but never used.","'ControlPanel' is defined but never used.","'ButtonBase' is defined but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]